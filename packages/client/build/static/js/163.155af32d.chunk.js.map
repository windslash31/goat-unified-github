{"version":3,"file":"static/js/163.155af32d.chunk.js","mappings":"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","sources":["hooks/useMediaQuery.js","config/platforms.js","pages/EmployeeDetailPage/EmployeeApplicationsTab.js","components/ui/DeviceDetailModal.js","components/ui/DeviceCardSkeleton.js","pages/EmployeeDetailPage/DevicesTab.js","components/ui/JiraTicketModal.js","pages/EmployeeDetailPage/UnifiedTimelinePage.js","pages/EmployeeDetailPage/EmployeeDetailHeader.js","components/ui/StatusBadge.js","components/ui/DetailRow.js","pages/EmployeeDetailPage/EmployeeDetailsTab.js","pages/EmployeeDetailPage/JumpcloudLogPage.js","pages/EmployeeDetailPage/GoogleLogPage.js","pages/EmployeeDetailPage/SlackLogPage.js","pages/EmployeeDetailPage/PlatformLogPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(window.matchMedia(query).matches);\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        const listener = () => setMatches(media.matches);\n        media.addEventListener('change', listener);\n        return () => media.removeEventListener('change', listener);\n    }, [query]);\n    return matches;\n};","export const PLATFORM_CONFIG = {\n    'Google Workspace': {\n        logo: 'https://static.wikia.nocookie.net/logopedia/images/c/c1/Google_Apps_for_Work_icon.png/'\n    },\n    'Slack': {\n        logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Slack_icon_2019.svg/2048px-Slack_icon_2019.svg.png'\n    },\n    'JumpCloud': {\n        logo: 'https://icon2.cleanpng.com/20181123/fw/kisspng-reading-education-organization-jumpcloud-kindergar-5bf85b3d3c6ca7.1295031515430029412475.jpg'\n    },\n    'Atlassian': {\n        logo: 'https://wac-cdn.atlassian.com/assets/img/favicons/atlassian/favicon-32x32.png'\n    },\n    'Default': {\n        logo: '' // A default fallback logo if needed\n    }\n};","import React, { memo } from 'react';\nimport { Ticket } from 'lucide-react';\nimport { PLATFORM_CONFIG } from '../../config/platforms';\nconst PlatformStatusBadge = ({ status }) => {\n    const styles = {\n        'Active': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n        'Suspended': 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',\n        'Not Found': 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',\n        'Error': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\n    };\n    return (\n        <span className={`px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full whitespace-nowrap ${styles[status] || styles['Error']}`}>\n            {status}\n        </span>\n    );\n};\n\nconst PlatformRowSkeleton = () => (\n    <div className=\"flex items-center justify-between p-4 rounded-lg bg-gray-50 dark:bg-gray-900/50 animate-pulse\">\n        <div className=\"flex items-center gap-4\">\n            <div className=\"w-8 h-8 rounded-md bg-gray-300 dark:bg-gray-700\"></div>\n            <div>\n                <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-24\"></div>\n                <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-32 mt-1\"></div>\n            </div>\n        </div>\n        <div className=\"h-6 bg-gray-300 dark:bg-gray-700 rounded-full w-20\"></div>\n    </div>\n);\n\nexport const EmployeeApplicationsTab = memo(({ applications, platformStatuses, isLoading, onTicketClick }) => {\n    return (\n        <div className=\"space-y-8\">\n            <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">Platform Access Status</h3>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-6\">Live status of the employee's account on integrated external platforms.</p>\n                <div className=\"space-y-4\">\n                    {isLoading ? (\n                        <>\n                            <PlatformRowSkeleton />\n                            <PlatformRowSkeleton />\n                            <PlatformRowSkeleton />\n                        </>\n                    ) : (\n                        platformStatuses.map(platform => (\n                            <div key={platform.platform} className=\"flex items-center justify-between p-4 rounded-lg bg-gray-50 dark:bg-gray-900/50\">\n                                <div className=\"flex items-center gap-4 min-w-0\">\n                                    <img src={PLATFORM_CONFIG[platform.platform]?.logo || PLATFORM_CONFIG.Default.logo} alt={`${platform.platform} Logo`} className=\"w-8 h-8\"/>\n                                    <div className=\"min-w-0\">\n                                        <p className=\"font-semibold text-gray-800 dark:text-gray-200 truncate\">{platform.platform}</p>\n                                        <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{platform.email || 'N/A'}</p>\n                                    </div>\n                                </div>\n                                <PlatformStatusBadge status={platform.status} />\n                            </div>\n                        ))\n                    )}\n                </div>\n            </div>\n            \n            <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                 <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Internal Application Access</h3>\n                 {(!applications || applications.length === 0) ? (\n                    <div className=\"text-center text-gray-500 dark:text-gray-400 py-4\">No internal application access records found.</div>\n                 ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4\">\n                        {applications.map(app => (\n                            <div key={app.name} className=\"p-4 bg-gray-50 dark:bg-gray-900/50 rounded-lg border border-gray-200 dark:border-gray-700/50\">\n                                <div className=\"font-semibold text-gray-800 dark:text-gray-200\">{app.name}</div>\n                                <div className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\n                                    <span className=\"font-medium\">Role:</span> {app.role}\n                                </div>\n                                <div className=\"mt-1 text-sm text-gray-500 dark:text-gray-400 flex items-center gap-2\">\n                                    <span className=\"font-medium\">Request:</span>\n                                    {app.jira_ticket ? (\n                                        <button onClick={() => onTicketClick(app.jira_ticket)} className=\"text-kredivo-primary hover:underline font-semibold flex items-center gap-1\">\n                                            <Ticket className=\"w-4 h-4\"/>\n                                            {app.jira_ticket}\n                                        </button>\n                                    ) : '—'}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                 )}\n            </div>\n        </div>\n    );\n});","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  X,\n  CheckCircle,\n  XCircle,\n  Info,\n  Hash,\n  Cpu,\n  HardDrive,\n  Monitor,\n  Shield,\n  Globe,\n  Wifi,\n} from \"lucide-react\";\nimport { Button } from \"./Button\";\n\n// A reusable row for displaying details, now with an icon\nconst DetailRow = ({ label, value, icon, isMono = false }) => (\n  <div className=\"flex items-start py-2.5 border-b border-gray-200 dark:border-gray-700 last:border-b-0\">\n    <dt className=\"w-1/3 text-gray-500 dark:text-gray-400 flex-shrink-0 flex items-center gap-2\">\n      {icon}\n      <span className=\"font-medium\">{label}</span>\n    </dt>\n    <dd\n      className={`w-2/3 text-gray-800 dark:text-gray-200 text-right break-words ${\n        isMono ? \"font-mono text-xs\" : \"\"\n      }`}\n    >\n      {value}\n    </dd>\n  </div>\n);\n\n// A reusable section header to group related information\nconst SectionHeader = ({ children }) => (\n  <h4 className=\"text-md font-semibold text-gray-600 dark:text-gray-300 pt-4 pb-1 border-b-2 border-kredivo-primary/50\">\n    {children}\n  </h4>\n);\n\nexport const DeviceDetailModal = ({ device, onClose }) => {\n  if (!device) return null;\n\n  // Helper to format boolean values for display\n  const formatBoolean = (value) =>\n    value ? (\n      <span className=\"flex items-center justify-end gap-1 text-green-600 dark:text-green-400\">\n        <CheckCircle size={14} /> Enabled\n      </span>\n    ) : (\n      <span className=\"flex items-center justify-end gap-1 text-red-600 dark:text-red-400\">\n        <XCircle size={14} /> Disabled\n      </span>\n    );\n\n  // Filter network interfaces for valid IPv4 addresses\n  const validIpV4Interfaces =\n    device.networkInterfaces?.filter(\n      (iface) =>\n        iface.address &&\n        /^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$/.test(iface.address) &&\n        !iface.address.startsWith(\"127.\")\n    ) || [];\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 z-50\"\n        onClick={onClose}\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] flex flex-col\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center\">\n            <h3 className=\"text-lg font-semibold\">\n              {device.displayName || device.hostname}\n            </h3>\n            <Button\n              onClick={onClose}\n              variant=\"secondary\"\n              className=\"p-1 h-auto\"\n            >\n              <X size={20} />\n            </Button>\n          </div>\n\n          <div className=\"p-6 overflow-y-auto space-y-2\">\n            <SectionHeader>System Information</SectionHeader>\n            <DetailRow\n              icon={<Info size={14} />}\n              label=\"Hostname\"\n              value={device.hostname}\n            />\n            <DetailRow\n              icon={<Monitor size={14} />}\n              label=\"Operating System\"\n              value={`${device.os} ${device.version}`}\n            />\n            <DetailRow\n              icon={<Cpu size={14} />}\n              label=\"Architecture\"\n              value={device.arch}\n            />\n            <DetailRow\n              icon={<Hash size={14} />}\n              label=\"Serial Number\"\n              value={device.serialNumber}\n              isMono={true}\n            />\n            <DetailRow\n              icon={<Info size={14} />}\n              label=\"Agent Version\"\n              value={device.agentVersion}\n            />\n            <DetailRow\n              icon={<Info size={14} />}\n              label=\"Last Contact\"\n              value={new Date(device.lastContact).toLocaleString()}\n            />\n\n            <SectionHeader>Security</SectionHeader>\n            <DetailRow\n              icon={<Shield size={14} />}\n              label=\"Multi-Factor Auth\"\n              value={formatBoolean(device.allowMultiFactorAuthentication)}\n            />\n            <DetailRow\n              icon={<HardDrive size={14} />}\n              label=\"Disk Encryption\"\n              value={formatBoolean(device.fde?.active)}\n            />\n            <DetailRow\n              icon={<CheckCircle size={14} />}\n              label=\"Has Service Account\"\n              value={formatBoolean(device.hasServiceAccount)}\n            />\n\n            <SectionHeader>Network</SectionHeader>\n            {validIpV4Interfaces.length > 0 ? (\n              validIpV4Interfaces.map((iface) => (\n                <DetailRow\n                  key={iface.name}\n                  icon={<Wifi size={14} />}\n                  label={iface.name}\n                  value={iface.address}\n                  isMono={true}\n                />\n              ))\n            ) : (\n              <p className=\"text-sm text-gray-500 py-2\">\n                No valid IPv4 addresses found.\n              </p>\n            )}\n          </div>\n\n          <div className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600 text-right\">\n            <Button onClick={onClose} variant=\"secondary\">\n              Close\n            </Button>\n          </div>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","// packages/client/src/components/ui/DeviceCardSkeleton.js\nimport React from \"react\";\n\nexport const DeviceCardSkeleton = () => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 animate-pulse\">\n      <div className=\"flex justify-between items-start\">\n        <div className=\"flex items-center gap-4\">\n          <div className=\"w-8 h-8 rounded-full bg-gray-300 dark:bg-gray-700\"></div>\n          <div>\n            <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-32 mb-2\"></div>\n            <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-24\"></div>\n          </div>\n        </div>\n        <div className=\"h-5 bg-gray-300 dark:bg-gray-700 rounded-full w-16\"></div>\n      </div>\n      <div className=\"mt-4 pt-2 border-t border-gray-100 dark:border-gray-700\">\n        <div className=\"flex justify-between\">\n          <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-20\"></div>\n          <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-28\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// packages/client/src/pages/EmployeeDetailPage/DevicesTab.js\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport api from \"../../api/api\";\nimport { Smartphone, Laptop, Server, CheckCircle, XCircle } from \"lucide-react\";\nimport { DeviceDetailModal } from \"../../components/ui/DeviceDetailModal\"; // Import the new modal\nimport { DeviceCardSkeleton } from \"../../components/ui/DeviceCardSkeleton\"; // Import the skeleton\n\nconst fetchEmployeeDevices = async (employeeId) => {\n  const { data } = await api.get(`/api/employees/${employeeId}/devices`);\n  return data;\n};\n\nconst DeviceCard = ({ device, onClick }) => {\n  const getDeviceIcon = (os) => {\n    if (os.toLowerCase().includes(\"windows\"))\n      return <Laptop className=\"w-8 h-8 text-blue-500\" />;\n    if (os.toLowerCase().includes(\"mac\"))\n      return <Laptop className=\"w-8 h-8 text-gray-500\" />;\n    if (os.toLowerCase().includes(\"linux\"))\n      return <Server className=\"w-8 h-8 text-yellow-500\" />;\n    return <Smartphone className=\"w-8 h-8 text-green-500\" />;\n  };\n\n  return (\n    <div\n      className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 cursor-pointer hover:shadow-md transition-shadow\"\n      onClick={onClick}\n    >\n      <div className=\"flex justify-between items-start\">\n        <div className=\"flex items-center gap-4\">\n          {getDeviceIcon(device.os)}\n          <div>\n            <p className=\"font-bold text-gray-900 dark:text-white\">\n              {device.hostname || \"N/A\"}\n            </p>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {device.os}\n            </p>\n          </div>\n        </div>\n        {device.active ? (\n          <span className=\"flex items-center text-xs gap-1 text-green-600\">\n            <CheckCircle size={14} /> Active\n          </span>\n        ) : (\n          <span className=\"flex items-center text-xs gap-1 text-red-600\">\n            <XCircle size={14} /> Inactive\n          </span>\n        )}\n      </div>\n      <div className=\"mt-4 pt-2 border-t border-gray-100 dark:border-gray-700 text-sm\">\n        <div className=\"flex justify-between\">\n          <span className=\"text-gray-500\">Last Contact:</span>\n          <span>{new Date(device.lastContact).toLocaleString()}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const DevicesTab = ({ employeeId }) => {\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const {\n    data: devices,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\"employeeDevices\", employeeId],\n    queryFn: () => fetchEmployeeDevices(employeeId),\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {/* Show 3 skeleton cards while loading */}\n        <DeviceCardSkeleton />\n        <DeviceCardSkeleton />\n        <DeviceCardSkeleton />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center p-6 text-red-500\">\n        Could not fetch device details.\n      </div>\n    );\n  }\n\n  if (!devices || devices.length === 0) {\n    return (\n      <div className=\"text-center p-6 text-gray-500\">\n        No devices found for this employee.\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {devices.map((device) => (\n          <DeviceCard\n            key={device.id}\n            device={device}\n            onClick={() => setSelectedDevice(device)}\n          />\n        ))}\n      </div>\n      <DeviceDetailModal\n        device={selectedDevice}\n        onClose={() => setSelectedDevice(null)}\n      />\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Portal } from './Portal';\nimport { X, ExternalLink, User, CheckSquare, Calendar, Loader } from 'lucide-react';\nimport toast from 'react-hot-toast';\nimport { Button } from './Button';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst fetchTicketDetails = async (ticketId, token) => {\n    if (!ticketId || !token) return null;\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/jira/ticket/${ticketId}`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n    });\n    if (!response.ok) {\n        const err = await response.json();\n        throw new Error(err.message || 'Failed to fetch Jira ticket details.');\n    }\n    return response.json();\n};\n\nconst DetailRow = ({ icon, label, value }) => (\n    <div className=\"flex items-center text-sm\">\n        <div className=\"w-1/3 text-gray-500 dark:text-gray-400 flex items-center\">\n            {icon}\n            <span className=\"ml-2\">{label}</span>\n        </div>\n        <div className=\"w-2/3 text-gray-800 dark:text-gray-200 font-medium\">{value}</div>\n    </div>\n);\n\n\nexport const JiraTicketModal = ({ ticketId, onClose }) => {\n    const token = localStorage.getItem('accessToken');\n    const { data: ticket, error, isLoading } = useQuery({\n        queryKey: ['jiraTicket', ticketId],\n        queryFn: () => fetchTicketDetails(ticketId, token),\n        enabled: !!ticketId && !!token,\n    });\n\n    useEffect(() => {\n        if(error) toast.error(error.message);\n    }, [error]);\n\n    const jiraBaseUrl = process.env.REACT_APP_JIRA_BASE_URL || `https://${process.env.ATLASSIAN_DOMAIN}/browse/`;\n    \n    return (\n        <Portal>\n            <AnimatePresence>\n                {ticketId && (\n                    <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 z-50\"\n                        onClick={onClose}\n                    >\n                        <motion.div\n                            initial={{ scale: 0.9, opacity: 0 }}\n                            animate={{ scale: 1, opacity: 1 }}\n                            exit={{ scale: 0.9, opacity: 0 }}\n                            transition={{ duration: 0.2 }}\n                            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-lg\"\n                            onClick={e => e.stopPropagation()}\n                        >\n                            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center\">\n                                <h3 className=\"text-lg font-semibold\">Jira Ticket: {ticketId}</h3>\n                                <button onClick={onClose} className=\"p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700\">\n                                    <X className=\"w-5 h-5\" />\n                                </button>\n                            </div>\n                            \n                            <div className=\"p-6\">\n                                {isLoading && (\n                                    <div className=\"flex justify-center items-center h-48\">\n                                        <Loader className=\"w-8 h-8 animate-spin text-kredivo-primary\" />\n                                    </div>\n                                )}\n                                {error && (\n                                    <div className=\"text-center h-48 flex flex-col justify-center items-center text-red-500\">\n                                        <p className=\"font-semibold\">Could not load ticket details.</p>\n                                        <p className=\"text-sm\">{error.message}</p>\n                                    </div>\n                                )}\n                                {ticket && (\n                                    <div className=\"space-y-4\">\n                                        <p className=\"text-xl font-bold text-gray-900 dark:text-white\">{ticket.summary}</p>\n                                        <div className=\"space-y-3 pt-4 border-t border-gray-200 dark:border-gray-700\">\n                                            <DetailRow icon={<CheckSquare size={16}/>} label=\"Status\" value={ticket.status} />\n                                            <DetailRow icon={<User size={16}/>} label=\"Assignee\" value={ticket.assignee} />\n                                            <DetailRow icon={<User size={16}/>} label=\"Reporter\" value={ticket.reporter} />\n                                            <DetailRow icon={<Calendar size={16}/>} label=\"Created\" value={new Date(ticket.created).toLocaleString()} />\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"bg-gray-50 dark:bg-gray-700/50 px-6 py-3 flex justify-end\">\n                                <a href={`${jiraBaseUrl}${ticketId}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <Button variant=\"primary\">\n                                        <ExternalLink className=\"w-4 h-4 mr-2\" />\n                                        Open in Jira\n                                    </Button>\n                                </a>\n                            </div>\n                        </motion.div>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </Portal>\n    );\n};","import React from \"react\";\n\nconst TimelineItemComponent = ({ title, description, date }) => {\n  return (\n    <div className=\"group relative py-6 pl-8 sm:pl-32\">\n      <div className=\"mb-1 flex flex-col items-start before:absolute before:left-2 before:h-full before:-translate-x-1/2 before:translate-y-3 before:self-start before:bg-slate-300 dark:before:bg-gray-700 before:px-px group-last:before:hidden sm:flex-row sm:before:left-0 sm:before:ml-[6.5rem] sm:after:left-0 sm:after:ml-[6.5rem] after:absolute after:left-2 after:box-content after:h-2 after:w-2 after:-translate-x-1/2 after:translate-y-1.5 after:rounded-full after:border-4 after:border-white dark:after:border-gray-800 after:bg-kredivo-primary\">\n        <time className=\"left-0 mb-3 inline-flex h-6 w-28 translate-y-0.5 items-center justify-center rounded-full bg-kredivo-light text-xs font-semibold uppercase text-kredivo-dark-text sm:absolute sm:mb-0\">\n          {date}\n        </time>\n        <div className=\"text-xl font-bold text-slate-900 dark:text-white\">\n          {title}\n        </div>\n      </div>\n      <div className=\"text-slate-500 dark:text-gray-400\">{description}</div>\n    </div>\n  );\n};\n\nconst TimelineItem = React.memo(TimelineItemComponent);\n\nexport const UnifiedTimelinePage = ({ events, loading, error }) => {\n  if (loading)\n    return <div className=\"text-center p-8\">Loading unified timeline...</div>;\n  if (error)\n    return <div className=\"text-center p-8 text-red-500\">Error: {error}</div>;\n  if (!events || events.length === 0)\n    return (\n      <div className=\"text-center p-8 text-gray-500\">\n        No unified activity found for this user.\n      </div>\n    );\n\n  const formatTimelineDate = (timestamp) => {\n    if (!timestamp) return \"\";\n    return new Date(timestamp).toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n  };\n\n  return (\n    <div className=\"flow-root\">\n      {events.map((event) => (\n        <TimelineItem\n          key={event.id}\n          title={`Access Granted: ${event.source}`}\n          description={event.description}\n          date={formatTimelineDate(event.timestamp)}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Edit, UserX, MoreVertical } from \"lucide-react\";\nimport { StatusBadge } from \"../../components/ui/StatusBadge\";\nimport { Button } from \"../../components/ui/Button\";\n\nexport const EmployeeDetailHeader = ({\n  employee,\n  onEdit,\n  onDeactivate,\n  permissions,\n  isOwnProfile,\n}) => {\n  const fullName = [\n    employee.first_name,\n    employee.middle_name,\n    employee.last_name,\n  ]\n    .filter(Boolean)\n    .join(\" \");\n  const [isActionMenuOpen, setIsActionMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setIsActionMenuOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4 sm:p-6 flex items-center justify-between\">\n      <div className=\"flex items-center\">\n        <img\n          src={`https://i.pravatar.cc/150?u=${employee.employee_email}`}\n          alt=\"User Avatar\"\n          className=\"w-16 h-16 rounded-full border-4 border-blue-200 dark:border-blue-800\"\n        />\n        <div className=\"ml-4\">\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            {fullName}\n          </h2>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            {employee.employee_email}\n          </p>\n          <div className=\"mt-2\">\n            <StatusBadge status={employee.status} />\n          </div>\n        </div>\n      </div>\n\n      {/* Desktop Buttons */}\n      <div className=\"hidden md:flex self-start items-center gap-2\">\n        {permissions.includes(\"employee:update\") && (\n          <Button\n            onClick={() => onEdit(employee)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 transition-colors\"\n          >\n            <Edit className=\"w-4 h-4\" /> Edit\n          </Button>\n        )}\n        {permissions.includes(\"employee:deactivate\") && !isOwnProfile && (\n          <button\n            onClick={() => onDeactivate(employee)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 transition-colors\"\n          >\n            <UserX className=\"w-4 h-4\" /> Suspend Access\n          </button>\n        )}\n      </div>\n\n      {/* Mobile Kebab Menu */}\n      <div ref={menuRef} className=\"md:hidden relative\">\n        <button\n          onClick={() => setIsActionMenuOpen(!isActionMenuOpen)}\n          className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700\"\n        >\n          <MoreVertical className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\n        </button>\n\n        {isActionMenuOpen && (\n          <div className=\"absolute top-full right-0 mt-2 w-48 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-lg shadow-lg z-30\">\n            <ul>\n              {permissions.includes(\"employee:update\") && (\n                <li>\n                  <button\n                    onClick={() => {\n                      onEdit(employee);\n                      setIsActionMenuOpen(false);\n                    }}\n                    className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Edit className=\"w-4 h-4\" /> Edit\n                  </button>\n                </li>\n              )}\n              {permissions.includes(\"employee:deactivate\") && !isOwnProfile && (\n                <li>\n                  <button\n                    onClick={() => {\n                      onDeactivate(employee);\n                      setIsActionMenuOpen(false);\n                    }}\n                    className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm text-red-500 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <UserX className=\"w-4 h-4\" /> Suspend Access\n                  </button>\n                </li>\n              )}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nconst StatusBadgeComponent = ({ status }) => {\n  // This function determines the Tailwind CSS classes based on the status string.\n  const getStatusStyles = () => {\n    switch (status) {\n      case \"Active\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\n      case \"Inactive\":\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300\";\n      case \"For Escalation\":\n        // Using a distinct style for \"For Escalation\" status.\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\";\n      default:\n        // A default style for any unexpected status values.\n        return \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\";\n    }\n  };\n\n  return (\n    <span\n      className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyles()}`}\n    >\n      {status}\n    </span>\n  );\n};\n\nexport const StatusBadge = React.memo(StatusBadgeComponent);\n","import React from \"react\";\n\nconst DetailRowComponent = ({ icon, label, value }) => {\n  return (\n    <div className=\"flex items-start justify-between py-2.5 text-sm border-b border-gray-200 dark:border-gray-700/50 last:border-b-0\">\n      <span className=\"flex items-center text-gray-600 dark:text-gray-400 font-medium\">\n        {icon}\n        {label}\n      </span>\n      {/* MODIFIED: The default value is now a dash '—' for a cleaner look. */}\n      <div className=\"text-gray-800 dark:text-gray-200 text-right\">\n        {value || \"—\"}\n      </div>\n    </div>\n  );\n};\n\nexport const DetailRow = React.memo(DetailRowComponent);\n","import React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  UserSquare,\n  UserCog,\n  ChevronsUp,\n  Building2,\n  Layers,\n  MapPin,\n  Hash,\n  Calendar,\n  Ticket,\n} from \"lucide-react\";\nimport { DetailRow } from \"../../components/ui/DetailRow\";\nimport { StatusBadge } from \"../../components/ui/StatusBadge\";\n\nexport const EmployeeDetailsTab = memo(\n  ({ employee, permissions, navigate, onTicketClick }) => {\n    const formatDate = (dateString) => {\n      if (!dateString) return \"—\";\n      return new Date(dateString).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    };\n\n    const JiraTicketLink = ({ ticketId }) => {\n      if (!ticketId) return \"—\";\n      // This is now a button that calls the handler passed down from the parent\n      return (\n        <button\n          onClick={() => onTicketClick(ticketId)}\n          className=\"text-kredivo-primary hover:text-kredivo-primary-hover hover:underline font-mono flex items-center gap-1 text-right\"\n        >\n          <Ticket className=\"w-4 h-4\" />\n          {ticketId}\n        </button>\n      );\n    };\n\n    const ManagerLink = ({ managerId, managerName, managerEmail }) => {\n      if (!managerId) return \"—\";\n\n      // This logic allows navigating to the manager's profile if the user has permission\n      if (permissions.includes(\"employee:read:all\")) {\n        return (\n          <Link\n            to={`/employees/${managerId}`}\n            className=\"text-kredivo-primary hover:text-kredivo-primary-hover hover:underline text-right\"\n          >\n            <div>{managerName}</div>\n            <div className=\"text-xs text-gray-400\">{managerEmail}</div>\n          </Link>\n        );\n      }\n\n      return (\n        <div className=\"text-right\">\n          <div>{managerName}</div>\n          <div className=\"text-xs text-gray-400\">{managerEmail}</div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-6\">\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\n              Identity & Role\n            </h4>\n            <DetailRow\n              icon={<UserSquare className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Email\"\n              value={employee.employee_email}\n            />\n            <DetailRow\n              icon={<UserCog className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Manager\"\n              value={\n                <ManagerLink\n                  managerId={employee.manager_id}\n                  managerName={employee.manager_name}\n                  managerEmail={employee.manager_email}\n                />\n              }\n            />\n            <DetailRow\n              icon={<ChevronsUp className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Position Level\"\n              value={employee.position_level}\n            />\n          </div>\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\n              Employment Details\n            </h4>\n            <DetailRow\n              icon={<Layers className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Employment Status\"\n              value={<StatusBadge status={employee.status} />}\n            />\n            <DetailRow\n              icon={<Building2 className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Legal Entity\"\n              value={employee.legal_entity}\n            />\n            <DetailRow\n              icon={<Layers className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Employee Type\"\n              value={\n                employee.employee_type && employee.employee_sub_type\n                  ? `${employee.employee_type} (${employee.employee_sub_type})`\n                  : employee.employee_type || \"—\"\n              }\n            />\n            <DetailRow\n              icon={<MapPin className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Office Location\"\n              value={employee.office_location}\n            />\n            <DetailRow\n              icon={<Hash className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Asset\"\n              value={employee.asset_name}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-6\">\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\n              Timeline\n            </h4>\n            <DetailRow\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-green-500\" />}\n              label=\"Join Date\"\n              value={formatDate(employee.join_date)}\n            />\n            <DetailRow\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-red-500\" />}\n              label=\"Exit Date\"\n              value={formatDate(employee.date_of_exit_at_date)}\n            />\n            <DetailRow\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-red-500\" />}\n              label=\"Access Cut-off\"\n              value={formatDate(employee.access_cut_off_date_at_date)}\n            />\n            <DetailRow\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\n              label=\"Record Updated\"\n              value={formatDate(employee.updated_at)}\n            />\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\n              Related Tickets\n            </h4>\n            <DetailRow\n              icon={<Ticket className=\"w-4 h-4 mr-2.5 text-kredivo-primary\" />}\n              label=\"Onboarding Ticket\"\n              value={<JiraTicketLink ticketId={employee.onboarding_ticket} />}\n            />\n            <DetailRow\n              icon={<Ticket className=\"w-4 h-4 mr-2.5 text-kredivo-primary\" />}\n              label=\"Offboarding Ticket\"\n              value={<JiraTicketLink ticketId={employee.offboarding_ticket} />}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, { memo, useState } from \"react\";\nimport {\n  AppWindow,\n  ChevronDown,\n  Database,\n  FileLock,\n  Filter,\n  Fingerprint,\n  KeyRound,\n  MapPin,\n  Monitor,\n  Server,\n  Shield,\n  UserCheck,\n  UserX,\n} from \"lucide-react\";\nimport { Button } from \"../../components/ui/Button\";\nimport { CustomSelect } from \"../../components/ui/CustomSelect\"; // Import CustomSelect\n\n// A dedicated badge for the log status\nconst LogStatusBadge = ({ success }) => {\n  const isSuccess = success;\n  const baseClasses = \"px-2.5 py-0.5 text-xs font-semibold rounded-full\";\n  const successClasses =\n    \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\n  const failureClasses =\n    \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300\";\n\n  return (\n    <span\n      className={`${baseClasses} ${\n        isSuccess ? successClasses : failureClasses\n      }`}\n    >\n      {isSuccess ? \"Success\" : \"Failed\"}\n    </span>\n  );\n};\n\n// The key-value pairs for the details section\nconst DetailItem = ({ label, children, isMono = false }) => (\n  <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center py-2.5 px-1\">\n    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400 flex-shrink-0\">\n      {label}\n    </dt>\n    <dd\n      className={`text-sm text-gray-800 dark:text-gray-200 text-left sm:text-right mt-1 sm:mt-0 break-words ${\n        isMono ? \"font-mono text-xs\" : \"\"\n      }`}\n    >\n      {children || \"N/A\"}\n    </dd>\n  </div>\n);\n\n// The header for sections within the details card\nconst DetailSectionHeader = ({ children }) => (\n  <h5 className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider mt-3 mb-1 px-1 first:mt-0\">\n    {children}\n  </h5>\n);\n\n// The main log page component\nexport const JumpCloudLogPage = memo(({ logs, loading, error }) => {\n  const [expandedLogRowId, setExpandedLogRowId] = useState(null);\n\n  const toggleRowExpansion = (logId) => {\n    setExpandedLogRowId((prevId) => (prevId === logId ? null : logId));\n  };\n\n  const getEventIcon = (eventType, success) => {\n    const baseClass = \"w-6 h-6 flex-shrink-0\";\n    switch (eventType) {\n      case \"login_attempt\":\n        return success ? (\n          <Monitor className={`${baseClass} text-green-500`} />\n        ) : (\n          <Monitor className={`${baseClass} text-red-500`} />\n        );\n      case \"sso_auth\":\n        return <AppWindow className={`${baseClass} text-blue-500`} />;\n      case \"user_create\":\n        return <UserCheck className={`${baseClass} text-green-500`} />;\n      case \"user_delete\":\n        return <UserX className={`${baseClass} text-red-500`} />;\n      case \"password_change\":\n        return <KeyRound className={`${baseClass} text-yellow-500`} />;\n      case \"directory_object_modify\":\n        return <FileLock className={`${baseClass} text-orange-500`} />;\n      case \"ldap_bind\":\n        return <Database className={`${baseClass} text-indigo-500`} />;\n      case \"user_login_attempt\":\n        return <Fingerprint className={`${baseClass} text-cyan-500`} />;\n      case \"passwordmanager_backup_create\":\n        return <FileLock className={`${baseClass} text-purple-500`} />;\n      default:\n        return <Shield className={`${baseClass} text-gray-400`} />;\n    }\n  };\n\n  const formatPrimaryInfo = (log) => {\n    switch (log.event_type) {\n      case \"sso_auth\":\n        return `Authenticated to ${\n          log.application?.display_label || \"an application\"\n        }`;\n      case \"login_attempt\":\n        return `Login to ${log.system?.displayName || \"system\"}`;\n      case \"ldap_bind\":\n        return `LDAP Bind attempt via ${log.auth_method}`;\n      default:\n        return log.event_type.replace(/_/g, \" \");\n    }\n  };\n\n  return (\n    <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n      {loading && (\n        <div className=\"text-center p-8\">Loading JumpCloud logs...</div>\n      )}\n      {error && (\n        <div className=\"text-center p-8 text-red-500\">Error: {error}</div>\n      )}\n      {!loading && !error && (!logs || logs.length === 0) && (\n        <div className=\"text-center p-8\">\n          No JumpCloud logs found for the selected criteria.\n        </div>\n      )}\n\n      {!loading &&\n        !error &&\n        logs &&\n        logs.map((log) => {\n          const isExpanded = expandedLogRowId === log.id;\n          const hasAuthContext =\n            log.auth_context && Object.keys(log.auth_context).length > 0;\n          const isSuccess =\n            log.event_type === \"sso_auth\" ? log.sso_token_success : log.success;\n          return (\n            <div\n              key={log.id}\n              className=\"p-4 hover:bg-gray-50 dark:hover:bg-gray-800/50 transition-colors duration-150\"\n            >\n              <button\n                onClick={() => toggleRowExpansion(log.id)}\n                className=\"w-full text-left\"\n              >\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"mt-1 flex-shrink-0\">\n                    {getEventIcon(log.event_type, isSuccess)}\n                  </div>\n                  <div className=\"flex-grow min-w-0\">\n                    <div className=\"flex justify-between items-start\">\n                      <p className=\"font-semibold text-gray-800 dark:text-gray-200 capitalize pr-4\">\n                        {formatPrimaryInfo(log)}\n                      </p>\n                      <div className=\"flex-shrink-0 flex items-center gap-2\">\n                        <LogStatusBadge success={isSuccess} />\n                        <ChevronDown\n                          className={`w-5 h-5 text-gray-400 transition-transform ${\n                            isExpanded ? \"rotate-180\" : \"\"\n                          }`}\n                        />\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                      {new Date(log.timestamp).toLocaleString()}\n                    </p>\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                      <span className=\"flex items-center gap-1.5\">\n                        <MapPin size={14} /> {log.geoip?.country_code || \"N/A\"}\n                      </span>\n                      <span className=\"flex items-center gap-1.5\">\n                        <Server size={14} /> {log.client_ip || \"N/A\"}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </button>\n              {isExpanded && (\n                <div className=\"pt-3\">\n                  <div className=\"p-3 bg-gray-100 dark:bg-gray-900/70 rounded-lg shadow-inner\">\n                    <dl className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                      <DetailSectionHeader>Event</DetailSectionHeader>\n                      <DetailItem label=\"Event Type\" isMono>\n                        {log.event_type}\n                      </DetailItem>\n                      <DetailItem label=\"Service\">{log.service}</DetailItem>\n                      {log.message && (\n                        <DetailItem label=\"Message\">{log.message}</DetailItem>\n                      )}\n                      {log.application && (\n                        <>\n                          <DetailSectionHeader>Application</DetailSectionHeader>\n                          <DetailItem label=\"Name\">\n                            {log.application.display_label}\n                          </DetailItem>\n                          <DetailItem label=\"SSO Type\">\n                            {log.application.sso_type}\n                          </DetailItem>\n                          <DetailItem label=\"ID\" isMono>\n                            {log.application.id}\n                          </DetailItem>\n                        </>\n                      )}\n                      {hasAuthContext && (\n                        <>\n                          <DetailSectionHeader>\n                            Authentication\n                          </DetailSectionHeader>\n                          <DetailItem label=\"MFA Method\">\n                            {log.mfa_meta?.type?.replace(/_/g, \" \") ||\n                              \"Not Applied\"}\n                          </DetailItem>\n                          <DetailItem label=\"IDP Initiated\">\n                            {log.idp_initiated ? \"Yes\" : \"No\"}\n                          </DetailItem>\n                        </>\n                      )}\n                      {log.geoip && (\n                        <>\n                          <DetailSectionHeader>Location</DetailSectionHeader>\n                          <DetailItem label=\"Timezone\">\n                            {log.geoip.timezone}\n                          </DetailItem>\n                          <DetailItem label=\"Coordinates\">\n                            {log.geoip.latitude}, {log.geoip.longitude}\n                          </DetailItem>\n                        </>\n                      )}\n                      {log.useragent && (\n                        <>\n                          <DetailSectionHeader>Device</DetailSectionHeader>\n                          <DetailItem label=\"OS\">\n                            {log.useragent.os_full}\n                          </DetailItem>\n                          <DetailItem label=\"Browser\">\n                            {log.useragent.name} {log.useragent.version}\n                          </DetailItem>\n                          <DetailItem label=\"Device Type\">\n                            {log.useragent.device}\n                          </DetailItem>\n                        </>\n                      )}\n                      {log.auth_context?.system && (\n                        <>\n                          <DetailSectionHeader>System</DetailSectionHeader>\n                          <DetailItem label=\"Hostname\">\n                            {log.auth_context.system.hostname}\n                          </DetailItem>\n                          <DetailItem label=\"OS\">\n                            {log.auth_context.system.os}{\" \"}\n                            {log.auth_context.system.version}\n                          </DetailItem>\n                        </>\n                      )}\n                    </dl>\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n    </div>\n  );\n});\n","import React from 'react';\nimport { Shield, Server } from 'lucide-react';\n\nexport const GoogleLogPage = ({ logs, loading, error }) => {\n    const getEventIcon = (eventName) => {\n        if (eventName.includes('login_success')) return <Shield className=\"w-5 h-5 text-green-500\" />;\n        if (eventName.includes('login_failure')) return <Shield className=\"w-5 h-5 text-red-500\" />;\n        return <Shield className=\"w-5 h-5 text-gray-400\" />;\n    };\n\n    if (loading) return <div className=\"text-center p-8\">Loading Google Workspace logs...</div>;\n    if (error) return <div className=\"text-center p-8 text-red-500\">Error: {error}</div>;\n    if (!logs || logs.length === 0) return <div className=\"text-center p-8 text-gray-500\">No Google Workspace login logs found for this user in the last 30 days.</div>;\n\n    return (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 divide-y divide-gray-200 dark:divide-gray-700\">\n            {logs.map(log => (\n                <div key={log.id.uniqueQualifier} className=\"flex flex-col md:flex-row p-4 items-start md:items-center space-y-2 md:space-y-0\">\n                    <div className=\"flex items-center gap-3 w-full md:w-1/3\">\n                        {getEventIcon(log.events[0].name)}\n                        <span className=\"font-semibold capitalize\">{log.events[0].name.replace(/_/g, ' ')}</span>\n                    </div>\n                    <div className=\"flex-1 text-sm text-gray-600 dark:text-gray-400\">\n                        <p className=\"flex items-center gap-2\"><Server className=\"w-4 h-4\" /> IP Address: {log.ipAddress || 'N/A'}</p>\n                    </div>\n                    <div className=\"w-full md:w-auto text-left md:text-right text-sm text-gray-500 dark:text-gray-300\">\n                        {new Date(log.id.time).toLocaleString()}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import React from 'react';\nimport { MessageSquare, LogIn, LogOut, File } from 'lucide-react';\n\nexport const SlackLogPage = ({ logs, loading, error }) => {\n    const getEventIcon = (action) => {\n        if (action.includes('login')) return <LogIn className=\"w-5 h-5 text-green-500\" />;\n        if (action.includes('logout')) return <LogOut className=\"w-5 h-5 text-red-500\" />;\n        if (action.includes('file')) return <File className=\"w-5 h-5 text-blue-500\" />;\n        return <MessageSquare className=\"w-5 h-5 text-gray-400\" />;\n    };\n\n    if (loading) return <div className=\"text-center p-8\">Loading Slack logs...</div>;\n    if (error) return <div className=\"text-center p-8 text-red-500\">Error: {error}</div>;\n    if (!logs || logs.length === 0) return <div className=\"text-center p-8 text-gray-500\">No Slack audit logs found for this user (Note: Requires Enterprise Grid plan).</div>;\n\n    return (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 divide-y divide-gray-200 dark:divide-gray-700\">\n            {logs.map(log => (\n                <div key={log.id} className=\"flex flex-col md:flex-row p-4 items-start md:items-center space-y-2 md:space-y-0\">\n                    <div className=\"flex items-center gap-3 w-full md:w-1/3\">\n                        {getEventIcon(log.action)}\n                        <span className=\"font-semibold capitalize\">{log.action.replace(/_/g, ' ')}</span>\n                    </div>\n                    <div className=\"flex-1 text-sm text-gray-600 dark:text-gray-400\">\n                        <p>Entity: {log.entity.channel?.name || ''}</p>\n                    </div>\n                    <div className=\"w-full md:w-auto text-left md:text-right text-sm text-gray-500 dark:text-gray-300\">\n                        {new Date(log.date_create * 1000).toLocaleString()}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import React, { useState, useCallback, useMemo } from \"react\";\nimport { Filter } from \"lucide-react\";\nimport { CustomSelect } from \"../../components/ui/CustomSelect\";\nimport { Button } from \"../../components/ui/Button\";\nimport { JumpCloudLogPage } from \"./JumpcloudLogPage\";\nimport { GoogleLogPage } from \"./GoogleLogPage\";\nimport { SlackLogPage } from \"./SlackLogPage\";\n\nconst platformOptions = [\n  { id: \"jumpcloud\", name: \"JumpCloud\" },\n  { id: \"google\", name: \"Google Workspace\" },\n  { id: \"slack\", name: \"Slack\" },\n];\n\nconst jumpCloudServiceOptions = [\n  { id: \"all\", name: \"All\" },\n  { id: \"access_management\", name: \"Access Management\" },\n  { id: \"alert\", name: \"Alert\" },\n  { id: \"directory\", name: \"Directory\" },\n  { id: \"ldap\", name: \"LDAP\" },\n  { id: \"mdm\", name: \"MDM\" },\n  { id: \"notifications\", name: \"Notifications\" },\n  { id: \"password_manager\", name: \"Password Manager\" },\n  { id: \"object_storage\", name: \"Object Storage\" },\n  { id: \"radius\", name: \"RADIUS\" },\n  { id: \"reports\", name: \"Reports\" },\n  { id: \"software\", name: \"Software\" },\n  { id: \"sso\", name: \"SSO\" },\n  { id: \"systems\", name: \"Systems\" },\n];\n\nexport const PlatformLogPage = ({ employeeId, onLogout }) => {\n  const [selectedPlatform, setSelectedPlatform] = useState(\"jumpcloud\");\n  const [logData, setLogData] = useState({\n    data: [],\n    loading: false,\n    error: null,\n    fetched: false,\n  });\n\n  // Centralized filter state\n  const [filterParams, setFilterParams] = useState({\n    startTime: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .split(\"T\")[0],\n    endTime: new Date().toISOString().split(\"T\")[0],\n    limit: 100,\n    service: \"all\", // Add service to the filter state\n  });\n\n  const fetchLogData = useCallback(async () => {\n    if (!employeeId) return;\n\n    setLogData({ data: [], loading: true, error: null, fetched: false });\n    const token = localStorage.getItem(\"accessToken\");\n    if (!token) {\n      onLogout();\n      return;\n    }\n\n    let url;\n    const baseUrl = `${process.env.REACT_APP_API_BASE_URL}/api/employees/${employeeId}`;\n\n    switch (selectedPlatform) {\n      case \"jumpcloud\":\n        const params = new URLSearchParams({\n          startTime: filterParams.startTime,\n          endTime: filterParams.endTime,\n          limit: filterParams.limit,\n          service: filterParams.service, // Include service in the request\n        });\n        url = `${baseUrl}/jumpcloud-logs?${params.toString()}`;\n        break;\n      case \"google\":\n        url = `${baseUrl}/google-logs`;\n        break;\n      case \"slack\":\n        url = `${baseUrl}/slack-logs`;\n        break;\n      default:\n        setLogData({\n          data: [],\n          loading: false,\n          error: \"Invalid platform selected\",\n          fetched: true,\n        });\n        return;\n    }\n\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!response.ok) {\n        const err = await response.json();\n        throw new Error(err.message || \"Failed to fetch logs\");\n      }\n      const data = await response.json();\n      setLogData({ data, loading: false, error: null, fetched: true });\n    } catch (error) {\n      setLogData({\n        data: [],\n        loading: false,\n        error: error.message,\n        fetched: true,\n      });\n    }\n  }, [employeeId, selectedPlatform, filterParams, onLogout]);\n\n  const handleFilterChange = (e) => {\n    setFilterParams((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleSelectChange = (name, value) => {\n    setFilterParams((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const LogViewer = useMemo(() => {\n    switch (selectedPlatform) {\n      case \"jumpcloud\":\n        return (\n          <JumpCloudLogPage\n            logs={logData.data}\n            loading={logData.loading}\n            error={logData.error}\n          />\n        );\n      case \"google\":\n        return (\n          <GoogleLogPage\n            logs={logData.data}\n            loading={logData.loading}\n            error={logData.error}\n          />\n        );\n      case \"slack\":\n        return (\n          <SlackLogPage\n            logs={logData.data}\n            loading={logData.loading}\n            error={logData.error}\n          />\n        );\n      default:\n        return (\n          <div className=\"p-8 text-center\">\n            Please select a platform to view logs.\n          </div>\n        );\n    }\n  }, [selectedPlatform, logData]);\n\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n  const minDate = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)\n    .toISOString()\n    .split(\"T\")[0];\n  const limitOptions = [\n    { id: 10, name: \"10\" },\n    { id: 100, name: \"100\" },\n    { id: 500, name: \"500\" },\n    { id: 1000, name: \"1000\" },\n  ];\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n      <div className=\"p-4 bg-gray-50 dark:bg-gray-900/50 border-b border-gray-200 dark:border-gray-700 space-y-4\">\n        <div>\n          <label\n            htmlFor=\"platform\"\n            className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n          >\n            Select Platform\n          </label>\n          <CustomSelect\n            id=\"platform\"\n            options={platformOptions}\n            value={selectedPlatform}\n            onChange={setSelectedPlatform}\n          />\n        </div>\n        {selectedPlatform === \"jumpcloud\" && (\n          <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-md\">\n            <h4 className=\"font-semibold text-md mb-2 flex items-center gap-2\">\n              <Filter size={16} /> JumpCloud Filters\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 items-end\">\n              <div>\n                <label\n                  htmlFor=\"service\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                >\n                  Service\n                </label>\n                <CustomSelect\n                  id=\"service\"\n                  options={jumpCloudServiceOptions}\n                  value={filterParams.service}\n                  onChange={(val) => handleSelectChange(\"service\", val)}\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"limit\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                >\n                  Limit\n                </label>\n                <CustomSelect\n                  id=\"limit\"\n                  options={limitOptions}\n                  value={filterParams.limit}\n                  onChange={(val) => handleSelectChange(\"limit\", val)}\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"startTime\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  Start Date\n                </label>\n                <input\n                  type=\"date\"\n                  name=\"startTime\"\n                  id=\"startTime\"\n                  value={filterParams.startTime}\n                  min={minDate}\n                  max={maxDate}\n                  onChange={handleFilterChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:ring-2 focus:ring-kredivo-primary\"\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"endTime\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  End Date\n                </label>\n                <input\n                  type=\"date\"\n                  name=\"endTime\"\n                  id=\"endTime\"\n                  value={filterParams.endTime}\n                  min={filterParams.startTime}\n                  max={maxDate}\n                  onChange={handleFilterChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:ring-2 focus:ring-kredivo-primary\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        <Button\n          onClick={fetchLogData}\n          disabled={logData.loading}\n          className=\"w-full md:w-auto justify-center\"\n        >\n          {logData.loading\n            ? \"Fetching...\"\n            : `Fetch ${\n                platformOptions.find((p) => p.id === selectedPlatform)?.name\n              } Logs`}\n        </Button>\n      </div>\n      <div className=\"p-4\">{LogViewer}</div>\n    </div>\n  );\n};\n"],"names":["useMediaQuery","query","matches","setMatches","useState","window","matchMedia","useEffect","media","listener","addEventListener","removeEventListener","PLATFORM_CONFIG","logo","PlatformStatusBadge","_ref","status","styles","_jsx","className","concat","children","PlatformRowSkeleton","_jsxs","EmployeeApplicationsTab","memo","_ref2","applications","platformStatuses","isLoading","onTicketClick","_Fragment","map","platform","_PLATFORM_CONFIG$plat","src","Default","alt","email","length","app","name","role","jira_ticket","onClick","Ticket","DetailRow","label","value","icon","isMono","SectionHeader","DeviceDetailModal","_ref3","_device$networkInterf","_device$fde","device","onClose","formatBoolean","CheckCircle","size","XCircle","validIpV4Interfaces","networkInterfaces","filter","iface","address","test","startsWith","AnimatePresence","motion","div","initial","opacity","animate","exit","scale","e","stopPropagation","displayName","hostname","Button","variant","X","Info","Monitor","os","version","Cpu","arch","Hash","serialNumber","agentVersion","Date","lastContact","toLocaleString","Shield","allowMultiFactorAuthentication","HardDrive","fde","active","hasServiceAccount","Wifi","DeviceCardSkeleton","DeviceCard","toLowerCase","includes","Laptop","Server","Smartphone","DevicesTab","employeeId","selectedDevice","setSelectedDevice","data","devices","error","useQuery","queryKey","queryFn","async","api","get","fetchEmployeeDevices","id","JiraTicketModal","ticketId","token","localStorage","getItem","ticket","response","fetch","process","headers","ok","err","json","Error","message","fetchTicketDetails","enabled","toast","Portal","transition","duration","Loader","summary","CheckSquare","User","assignee","reporter","Calendar","created","href","target","rel","ExternalLink","TimelineItemComponent","title","description","date","TimelineItem","React","UnifiedTimelinePage","events","loading","event","source","timestamp","toLocaleDateString","day","month","year","EmployeeDetailHeader","employee","onEdit","onDeactivate","permissions","isOwnProfile","fullName","first_name","middle_name","last_name","Boolean","join","isActionMenuOpen","setIsActionMenuOpen","menuRef","useRef","handleClickOutside","current","contains","document","employee_email","StatusBadge","Edit","UserX","ref","MoreVertical","StatusBadgeComponent","getStatusStyles","DetailRowComponent","EmployeeDetailsTab","navigate","formatDate","dateString","JiraTicketLink","ManagerLink","managerId","managerName","managerEmail","Link","to","UserSquare","UserCog","manager_id","manager_name","manager_email","ChevronsUp","position_level","Layers","Building2","legal_entity","employee_type","employee_sub_type","MapPin","office_location","asset_name","join_date","date_of_exit_at_date","access_cut_off_date_at_date","updated_at","onboarding_ticket","offboarding_ticket","LogStatusBadge","success","isSuccess","DetailItem","DetailSectionHeader","JumpCloudLogPage","_ref4","logs","expandedLogRowId","setExpandedLogRowId","getEventIcon","eventType","baseClass","AppWindow","UserCheck","KeyRound","FileLock","Database","Fingerprint","formatPrimaryInfo","log","_log$application","_log$system","event_type","application","display_label","system","auth_method","replace","_log$geoip","_log$mfa_meta","_log$mfa_meta$type","_log$auth_context","isExpanded","hasAuthContext","auth_context","Object","keys","sso_token_success","toggleRowExpansion","logId","prevId","ChevronDown","geoip","country_code","client_ip","service","sso_type","mfa_meta","type","idp_initiated","timezone","latitude","longitude","useragent","os_full","GoogleLogPage","eventName","ipAddress","time","uniqueQualifier","SlackLogPage","_log$entity$channel","action","LogIn","LogOut","File","MessageSquare","entity","channel","date_create","platformOptions","jumpCloudServiceOptions","PlatformLogPage","_platformOptions$find","onLogout","selectedPlatform","setSelectedPlatform","logData","setLogData","fetched","filterParams","setFilterParams","startTime","now","toISOString","split","endTime","limit","fetchLogData","useCallback","url","baseUrl","params","URLSearchParams","toString","Authorization","handleFilterChange","prev","_objectSpread","handleSelectChange","LogViewer","useMemo","maxDate","minDate","htmlFor","CustomSelect","options","onChange","Filter","val","min","max","disabled","find","p"],"sourceRoot":""}