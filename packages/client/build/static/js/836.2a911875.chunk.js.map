{"version":3,"file":"static/js/836.2a911875.chunk.js","mappings":"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","sources":["components/ui/FilterPopover.js","components/ui/StatusBadge.js","components/ui/FilterPills.js","hooks/useMediaQuery.js","components/ui/Pagination.js","components/ui/StatusQuickFilters.js","components/ui/EmptyState.js","components/ui/EmployeeImportModal.js","pages/EmployeeListPage.js","hooks/useDebounce.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { CustomSelect } from \"./CustomSelect\";\r\nimport { Portal } from \"./Portal\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst FilterDropdown = ({ label, name, value, onChange, options = [] }) => (\r\n  <div>\r\n    <label\r\n      htmlFor={name}\r\n      className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n    >\r\n      {label}\r\n    </label>\r\n    <CustomSelect\r\n      id={name}\r\n      options={options}\r\n      value={value}\r\n      onChange={(val) => onChange({ target: { name, value: val } })}\r\n      placeholder=\"All\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport const FilterPopover = ({\r\n  initialFilters,\r\n  onApply,\r\n  onClear,\r\n  onClose,\r\n  options,\r\n  buttonRef,\r\n  isActivityLog = false,\r\n}) => {\r\n  const [localFilters, setLocalFilters] = useState(initialFilters);\r\n  const popoverRef = useRef(null);\r\n  const [position, setPosition] = useState({ top: 0, left: 0, width: \"auto\" });\r\n\r\n  const statusOptions = [\r\n    { id: \"all\", name: \"All\" },\r\n    { id: \"active\", name: \"Active\" },\r\n    { id: \"inactive\", name: \"Inactive\" },\r\n    { id: \"invited\", name: \"Invited\" },\r\n  ];\r\n\r\n  useLayoutEffect(() => {\r\n    if (buttonRef.current) {\r\n      const rect = buttonRef.current.getBoundingClientRect();\r\n      if (window.innerWidth < 768) {\r\n        setPosition({\r\n          top: rect.bottom + 10,\r\n          left: \"1rem\",\r\n          right: \"1rem\",\r\n          width: \"auto\",\r\n        });\r\n      } else {\r\n        setPosition({\r\n          top: rect.bottom + 10,\r\n          right: window.innerWidth - rect.right,\r\n          left: \"auto\",\r\n          width: \"24rem\",\r\n        });\r\n      }\r\n    }\r\n  }, [buttonRef]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (event.target.closest('[data-role=\"custom-select-options\"]')) {\r\n        return;\r\n      }\r\n      if (\r\n        popoverRef.current &&\r\n        !popoverRef.current.contains(event.target) &&\r\n        buttonRef.current &&\r\n        !buttonRef.current.contains(event.target)\r\n      ) {\r\n        onClose();\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, [onClose, buttonRef]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLocalFilters((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleApplyClick = () => {\r\n    onApply(localFilters);\r\n    onClose();\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    onClear();\r\n    onClose();\r\n  };\r\n\r\n  const popoverVariants = {\r\n    hidden: { opacity: 0, scale: 0.98, y: -5 },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      y: 0,\r\n      transition: { duration: 0.2, ease: \"easeOut\" },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      scale: 0.98,\r\n      y: -5,\r\n      transition: { duration: 0.15, ease: \"easeIn\" },\r\n    },\r\n  };\r\n\r\n  const renderEmployeeFilters = () => (\r\n    <>\r\n      <FilterDropdown\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={localFilters.status}\r\n        onChange={handleInputChange}\r\n        options={statusOptions}\r\n      />\r\n      <FilterDropdown\r\n        label=\"Internal Application\"\r\n        name=\"application_id\"\r\n        value={localFilters.application_id}\r\n        onChange={handleInputChange}\r\n        options={options.applications}\r\n      />\r\n      {/* ... other employee filters */}\r\n    </>\r\n  );\r\n\r\n  const renderActivityLogFilters = () => (\r\n    <>\r\n      <FilterDropdown\r\n        label=\"Action Type\"\r\n        name=\"actionType\"\r\n        value={localFilters.actionType}\r\n        onChange={handleInputChange}\r\n        options={options.actionTypes}\r\n      />\r\n      <FilterDropdown\r\n        label=\"Actor\"\r\n        name=\"actorEmail\"\r\n        value={localFilters.actorEmail}\r\n        onChange={handleInputChange}\r\n        options={options.actors}\r\n      />\r\n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4 grid grid-cols-2 gap-4\">\r\n        <div>\r\n          <label\r\n            htmlFor=\"startDate\"\r\n            className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n          >\r\n            Start Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"startDate\"\r\n            id=\"startDate\"\r\n            value={localFilters.startDate || \"\"}\r\n            onChange={handleInputChange}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label\r\n            htmlFor=\"endDate\"\r\n            className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n          >\r\n            End Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"endDate\"\r\n            id=\"endDate\"\r\n            value={localFilters.endDate || \"\"}\r\n            onChange={handleInputChange}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Portal>\r\n      <AnimatePresence>\r\n        <motion.div\r\n          ref={popoverRef}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          variants={popoverVariants}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: `${position.top}px`,\r\n            left: position.left,\r\n            right: position.right,\r\n            width: position.width,\r\n          }}\r\n          className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-xl z-20\"\r\n        >\r\n          <div className=\"p-5\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Filters</h3>\r\n            <div className=\"space-y-4\">\r\n              {isActivityLog\r\n                ? renderActivityLogFilters()\r\n                : renderEmployeeFilters()}\r\n            </div>\r\n          </div>\r\n          <div className=\"px-5 py-3 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600 flex justify-between items-center rounded-b-lg\">\r\n            <button\r\n              onClick={handleClearClick}\r\n              className=\"text-sm font-medium text-gray-600 dark:text-gray-300 hover:text-black dark:hover:text-white\"\r\n            >\r\n              Clear All\r\n            </button>\r\n            <button\r\n              onClick={handleApplyClick}\r\n              className=\"px-6 py-2 bg-kredivo-primary text-white font-semibold rounded-md shadow-sm hover:bg-kredivo-primary-hover focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-kredivo-primary\"\r\n            >\r\n              Apply Filters\r\n            </button>\r\n          </div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </Portal>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst StatusBadgeComponent = ({ status }) => {\r\n  // This function determines the Tailwind CSS classes based on the status string.\r\n  const getStatusStyles = () => {\r\n    switch (status) {\r\n      case \"Active\":\r\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\r\n      case \"Inactive\":\r\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300\";\r\n      case \"For Escalation\":\r\n        // Using a distinct style for \"For Escalation\" status.\r\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\";\r\n      default:\r\n        // A default style for any unexpected status values.\r\n        return \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span\r\n      className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyles()}`}\r\n    >\r\n      {status}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const StatusBadge = React.memo(StatusBadgeComponent);\r\n","import React from \"react\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport const FilterPills = ({\r\n  filters,\r\n  setFilters,\r\n  setSearchInputValue,\r\n  options,\r\n  onClear,\r\n  isActivityLog = false,\r\n}) => {\r\n  const removeFilter = (key) => {\r\n    if (key === \"search\") setSearchInputValue(\"\");\r\n    const newFilters = { ...filters, [key]: \"\" };\r\n    if (key === \"status\") newFilters.status = \"all\";\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const filterLabels = isActivityLog\r\n    ? {\r\n        actionType: \"Action\",\r\n        actorEmail: \"Actor\",\r\n        startDate: \"Start Date\",\r\n        endDate: \"End Date\",\r\n      }\r\n    : {\r\n        jobTitle: \"Job Title\",\r\n        manager: \"Manager\",\r\n        legal_entity_id: \"Legal Entity\",\r\n        office_location_id: \"Office\",\r\n        employee_type_id: \"Type\",\r\n        employee_sub_type_id: \"Sub-Type\",\r\n        application_id: \"Application\",\r\n      };\r\n\r\n  const optionsMap = isActivityLog\r\n    ? {\r\n        actionType: options.actionTypes,\r\n        actorEmail: options.actors,\r\n      }\r\n    : {\r\n        legal_entity_id: options.legalEntities,\r\n        office_location_id: options.officeLocations,\r\n        employee_type_id: options.employeeTypes,\r\n        employee_sub_type_id: options.employeeSubTypes,\r\n        application_id: options.applications,\r\n      };\r\n\r\n  const activeFilters = Object.entries(filters)\r\n    .filter(([key, value]) => value && value !== \"all\" && key !== \"search\")\r\n    .map(([key, value]) => {\r\n      let displayValue = value;\r\n      if (optionsMap[key]) {\r\n        const foundOption = optionsMap[key]?.find(\r\n          (opt) => String(opt.id) === String(value)\r\n        );\r\n        if (foundOption) displayValue = foundOption.name;\r\n      }\r\n      return { key, label: filterLabels[key] || key, value: displayValue };\r\n    });\r\n\r\n  if (activeFilters.length === 0) return <div className=\"h-8\"></div>;\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-2 h-auto flex-wrap py-2\">\r\n      <span className=\"text-sm font-medium\">Active Filters:</span>\r\n      {activeFilters.map(({ key, label, value }) => (\r\n        <span\r\n          key={key}\r\n          className=\"inline-flex items-center gap-x-1.5 py-1.5 px-3 rounded-full text-xs font-medium bg-kredivo-light text-kredivo-dark-text dark:bg-kredivo-primary/20 dark:text-kredivo-light\"\r\n        >\r\n          {label}: {String(value).substring(0, 20)}\r\n          <button\r\n            onClick={() => removeFilter(key)}\r\n            className=\"ml-1 -mr-1 h-4 w-4 rounded-full inline-flex items-center justify-center text-kredivo-primary hover:bg-kredivo-primary/20 dark:text-kredivo-light dark:hover:bg-kredivo-primary/40\"\r\n          >\r\n            <X className=\"w-3 h-3\" />\r\n          </button>\r\n        </span>\r\n      ))}\r\n      <button\r\n        onClick={onClear}\r\n        className=\"text-sm font-medium text-kredivo-primary hover:underline\"\r\n      >\r\n        Clear All\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useMediaQuery = (query) => {\r\n    const [matches, setMatches] = useState(window.matchMedia(query).matches);\r\n    useEffect(() => {\r\n        const media = window.matchMedia(query);\r\n        const listener = () => setMatches(media.matches);\r\n        media.addEventListener('change', listener);\r\n        return () => media.removeEventListener('change', listener);\r\n    }, [query]);\r\n    return matches;\r\n};","import React from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\nexport const Pagination = ({ pagination, setPagination }) => {\r\n    const { currentPage, totalPages, totalCount, limit } = pagination;\r\n    if (totalCount === 0) return null;\r\n    const from = (currentPage - 1) * limit + 1;\r\n    const to = Math.min(currentPage * limit, totalCount);\r\n\r\n    return (\r\n        <div className=\"flex flex-col sm:flex-row items-center justify-between px-6 py-3 bg-gray-50 dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700\">\r\n            <span className=\"text-sm text-gray-700 dark:text-gray-300 mb-2 sm:mb-0\">\r\n                Showing <span className=\"font-semibold\">{from}</span> to <span className=\"font-semibold\">{to}</span> of <span className=\"font-semibold\">{totalCount}</span> results\r\n            </span>\r\n            <div className=\"flex items-center gap-2\">\r\n                <button onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))} disabled={currentPage === 1} className=\"p-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-200 dark:hover:bg-gray-700\"><ChevronLeft className=\"w-5 h-5\" /></button>\r\n                <span className=\"text-sm\">Page {currentPage} of {totalPages}</span>\r\n                <button onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))} disabled={currentPage === totalPages} className=\"p-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-200 dark:hover:bg-gray-700\"><ChevronRight className=\"w-5 h-5\" /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const StatusQuickFilters = ({ currentStatus, onStatusChange }) => {\r\n    const statuses = ['all', 'active', 'escalation', 'inactive'];\r\n    const capitalize = (s) => s.charAt(0).toUpperCase() + s.slice(1);\r\n\r\n    return (\r\n        <div className=\"flex items-center border-b border-gray-200 dark:border-gray-700 overflow-x-auto\">\r\n            {statuses.map(status => (\r\n                <button\r\n                    key={status}\r\n                    onClick={() => onStatusChange(status)}\r\n                    className={`px-4 py-3 text-sm font-semibold transition-colors -mb-px border-b-2 whitespace-nowrap ${\r\n                        currentStatus === status\r\n                        ? 'border-kredivo-primary text-kredivo-primary'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'\r\n                    }`}\r\n                >\r\n                    {capitalize(status).replace('_', ' ')}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { UserSearch } from 'lucide-react';\r\n\r\nexport const EmptyState = () => (\r\n    <div className=\"text-center py-16 text-gray-500 dark:text-gray-400\">\r\n        <UserSearch className=\"mx-auto w-12 h-12 text-gray-400\" />\r\n        <p className=\"font-semibold mt-4\">No Employees Found</p>\r\n        <p className=\"text-sm mt-1\">Try adjusting your search or filter criteria.</p>\r\n    </div>\r\n);","import React, { useState } from \"react\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  Upload,\r\n  X,\r\n  FileText,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  Download,\r\n} from \"lucide-react\";\r\nimport { Button } from \"./Button\";\r\nimport api from \"../../api/api\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nexport const EmployeeImportModal = ({ isOpen, onClose }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState(null);\r\n  const queryClient = useQueryClient();\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile && selectedFile.type === \"text/csv\") {\r\n      setFile(selectedFile);\r\n    } else {\r\n      toast.error(\"Please select a valid .csv file.\");\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      toast.error(\"Please select a file to upload.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadResult(null);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const { data } = await api.post(\"/api/employees/bulk-import\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      setUploadResult(data);\r\n      toast.success(\"File processed successfully!\");\r\n      queryClient.invalidateQueries([\"employees\"]);\r\n    } catch (error) {\r\n      const errorMessage =\r\n        error.response?.data?.message || \"An error occurred during upload.\";\r\n      setUploadResult({ errors: [{ message: errorMessage }] });\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadTemplate = async () => {\r\n    try {\r\n      const response = await api.get(\"/api/employees/template/csv\", {\r\n        responseType: \"blob\", // Important for file downloads\r\n      });\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"employee_import_template.csv\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n    } catch (error) {\r\n      toast.error(\"Failed to download template.\");\r\n      console.error(\"Template download error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFile(null);\r\n    setUploadResult(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 z-50\"\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-lg\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center\">\r\n              <h3 className=\"text-lg font-semibold\">Bulk Import Employees</h3>\r\n              <button\r\n                onClick={handleClose}\r\n                className=\"p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n              >\r\n                <X className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"p-6\">\r\n              {!uploadResult ? (\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400 space-y-3\">\r\n                    <p>\r\n                      Upload a CSV file to create or update employees in bulk.\r\n                      Required columns are: `first_name`, `last_name`, and\r\n                      `employee_email`.\r\n                    </p>\r\n                    {/* --- NEW: Download Template Link --- */}\r\n                    <div className=\"flex justify-center\">\r\n                      <button\r\n                        onClick={handleDownloadTemplate}\r\n                        className=\"inline-flex items-center gap-2 text-sm font-medium text-kredivo-primary hover:text-kredivo-dark-text\"\r\n                      >\r\n                        <Download className=\"w-4 h-4\" />\r\n                        Download CSV Template\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-center w-full\">\r\n                    <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\">\r\n                      <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\r\n                        <Upload className=\"w-8 h-8 mb-2 text-gray-500 dark:text-gray-400\" />\r\n                        <p className=\"mb-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                          <span className=\"font-semibold\">Click to upload</span>{\" \"}\r\n                          or drag and drop\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          CSV (MAX. 5MB)\r\n                        </p>\r\n                      </div>\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"hidden\"\r\n                        accept=\".csv\"\r\n                        onChange={handleFileChange}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  {file && (\r\n                    <div className=\"flex items-center gap-2 p-2 bg-gray-100 dark:bg-gray-900 rounded-md\">\r\n                      <FileText className=\"w-5 h-5 text-gray-500\" />\r\n                      <span className=\"text-sm font-medium\">{file.name}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">Import Results</h4>\r\n                  <div className=\"max-h-60 overflow-y-auto p-3 bg-gray-100 dark:bg-gray-900 rounded-md space-y-2\">\r\n                    {uploadResult.errors &&\r\n                      uploadResult.errors.map((err, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex items-start gap-2 text-red-600 dark:text-red-400\"\r\n                        >\r\n                          <AlertCircle className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\r\n                          <p className=\"text-sm\">\r\n                            {err.row ? `Row ${err.row}: ` : \"\"}\r\n                            {err.message}\r\n                          </p>\r\n                        </div>\r\n                      ))}\r\n                    {uploadResult.created > 0 && (\r\n                      <div className=\"flex items-start gap-2 text-green-600 dark:text-green-400\">\r\n                        <CheckCircle className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\r\n                        <p className=\"text-sm\">\r\n                          Successfully created {uploadResult.created} employees.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                    {uploadResult.updated > 0 && (\r\n                      <div className=\"flex items-start gap-2 text-blue-600 dark:text-blue-400\">\r\n                        <CheckCircle className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\r\n                        <p className=\"text-sm\">\r\n                          Successfully updated {uploadResult.updated} employees.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"px-6 py-4 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600 flex justify-end gap-3\">\r\n              <Button onClick={handleClose} variant=\"secondary\">\r\n                Close\r\n              </Button>\r\n              {!uploadResult && (\r\n                <Button\r\n                  onClick={handleUpload}\r\n                  disabled={isUploading || !file}\r\n                  variant=\"primary\"\r\n                >\r\n                  {isUploading ? \"Uploading...\" : \"Upload & Process\"}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Search,\r\n  Filter as FilterIcon,\r\n  MoreVertical,\r\n  Edit,\r\n  UserX,\r\n  Trash2,\r\n  ChevronUp,\r\n  ChevronDown,\r\n  ChevronsUpDown,\r\n  X,\r\n  Download,\r\n  Upload,\r\n  Loader,\r\n} from \"lucide-react\";\r\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Button } from \"../components/ui/Button\";\r\nimport { StatusBadge } from \"../components/ui/StatusBadge\";\r\nimport { FilterPopover } from \"../components/ui/FilterPopover\";\r\nimport { Pagination } from \"../components/ui/Pagination\";\r\nimport { StatusQuickFilters } from \"../components/ui/StatusQuickFilters\";\r\nimport { FilterPills } from \"../components/ui/FilterPills\";\r\nimport { EmptyState } from \"../components/ui/EmptyState\";\r\nimport { useDebounce } from \"../hooks/useDebounce\";\r\nimport { useFetchFilterOptions } from \"../hooks/useFetchFilterOptions\";\r\nimport { useMediaQuery } from \"../hooks/useMediaQuery\";\r\nimport { motion } from \"framer-motion\";\r\nimport api from \"../api/api\";\r\nimport { EmployeeImportModal } from \"../components/ui/EmployeeImportModal\";\r\nimport { EmployeeListSkeleton } from \"../components/ui/EmployeeListSkeleton\";\r\n\r\nconst MobileList = React.memo(({ employees }) => (\r\n  <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n    {employees.map((emp) => {\r\n      const fullName = [emp.first_name, emp.middle_name, emp.last_name]\r\n        .filter(Boolean)\r\n        .join(\" \");\r\n      return (\r\n        <Link\r\n          to={`/employees/${emp.id}`}\r\n          key={emp.id}\r\n          className=\"block p-4 hover:bg-gray-50 dark:hover:bg-gray-700/50\"\r\n        >\r\n          <div className=\"flex justify-between items-start\">\r\n            <div>\r\n              <p className=\"font-bold text-gray-900 dark:text-white\">\r\n                {fullName}\r\n              </p>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                {emp.employee_email}\r\n              </p>\r\n            </div>\r\n            <StatusBadge status={emp.status} />\r\n          </div>\r\n          <div className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\r\n            <p>{emp.position_name || \"No position specified\"}</p>\r\n          </div>\r\n        </Link>\r\n      );\r\n    })}\r\n  </div>\r\n));\r\n\r\nconst DesktopTable = React.memo(\r\n  ({\r\n    employees,\r\n    sorting,\r\n    setSorting,\r\n    selectedRows,\r\n    handleSelectAll,\r\n    handleSelectRow,\r\n    onEdit,\r\n    onDeactivate,\r\n  }) => {\r\n    const parentRef = useRef(null);\r\n    const [activeActionMenu, setActiveActionMenu] = useState(null);\r\n    const actionMenuRef = useRef(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n      const handleClickOutside = (event) => {\r\n        if (\r\n          actionMenuRef.current &&\r\n          !actionMenuRef.current.contains(event.target)\r\n        ) {\r\n          setActiveActionMenu(null);\r\n        }\r\n      };\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () =>\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    }, []);\r\n\r\n    const rowVirtualizer = useVirtualizer({\r\n      count: employees.length,\r\n      getScrollElement: () => parentRef.current,\r\n      estimateSize: () => 65,\r\n      overscan: 10,\r\n    });\r\n\r\n    const TableHeader = ({ children, columnKey }) => {\r\n      const isSorted = sorting.sortBy === columnKey;\r\n      const handleSort = () =>\r\n        setSorting((prev) => ({\r\n          sortBy: columnKey,\r\n          sortOrder: isSorted && prev.sortOrder === \"asc\" ? \"desc\" : \"asc\",\r\n        }));\r\n      return (\r\n        <button\r\n          onClick={handleSort}\r\n          className=\"flex items-center gap-2 w-full text-left font-bold\"\r\n        >\r\n          <span>{children}</span>\r\n          <span className=\"text-gray-400\">\r\n            {isSorted ? (\r\n              sorting.sortOrder === \"asc\" ? (\r\n                <ChevronUp className=\"w-4 h-4\" />\r\n              ) : (\r\n                <ChevronDown className=\"w-4 h-4\" />\r\n              )\r\n            ) : (\r\n              <ChevronsUpDown className=\"w-4 h-4 opacity-50\" />\r\n            )}\r\n          </span>\r\n        </button>\r\n      );\r\n    };\r\n\r\n    const virtualItems = rowVirtualizer.getVirtualItems();\r\n    const paddingTop =\r\n      virtualItems.length > 0 ? virtualItems[0]?.start ?? 0 : 0;\r\n    const paddingBottom =\r\n      virtualItems.length > 0\r\n        ? rowVirtualizer.getTotalSize() -\r\n          (virtualItems[virtualItems.length - 1]?.end ?? 0)\r\n        : 0;\r\n\r\n    return (\r\n      <div ref={parentRef} className=\"h-[600px] overflow-auto\">\r\n        <table className=\"min-w-full table-fixed\">\r\n          <thead className=\"sticky top-0 bg-gray-50 dark:bg-gray-800 z-10\">\r\n            <tr className=\"border-b border-gray-200 dark:border-gray-700\">\r\n              <th className=\"px-6 py-3 w-[5%] text-left text-xs uppercase text-gray-500\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={handleSelectAll}\r\n                  checked={\r\n                    employees.length > 0 &&\r\n                    selectedRows.size === employees.length\r\n                  }\r\n                  className=\"rounded\"\r\n                />\r\n              </th>\r\n              <th className=\"px-6 py-3 w-[25%] text-left text-xs uppercase text-gray-500\">\r\n                <TableHeader columnKey=\"first_name\">Employee</TableHeader>\r\n              </th>\r\n              <th className=\"px-6 py-3 w-[30%] text-left text-xs uppercase text-gray-500\">\r\n                <TableHeader columnKey=\"employee_email\">Email</TableHeader>\r\n              </th>\r\n              <th className=\"px-6 py-3 w-[20%] text-left text-xs uppercase text-gray-500\">\r\n                <TableHeader columnKey=\"position_name\">Job Title</TableHeader>\r\n              </th>\r\n              <th className=\"px-6 py-3 w-[15%] text-left text-xs uppercase text-gray-500\">\r\n                <TableHeader columnKey=\"status\">Status</TableHeader>\r\n              </th>\r\n              <th className=\"px-6 py-3 w-[5%] text-left text-xs uppercase text-gray-500\"></th>\r\n            </tr>\r\n          </thead>\r\n          <motion.tbody\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={{\r\n              visible: {\r\n                transition: {\r\n                  staggerChildren: 0.05,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {paddingTop > 0 && (\r\n              <tr>\r\n                <td colSpan={6} style={{ height: `${paddingTop}px` }} />\r\n              </tr>\r\n            )}\r\n            {virtualItems.map((virtualRow) => {\r\n              const employee = employees[virtualRow.index];\r\n              const fullName = [\r\n                employee.first_name,\r\n                employee.middle_name,\r\n                employee.last_name,\r\n              ]\r\n                .filter(Boolean)\r\n                .join(\" \");\r\n\r\n              const itemVariants = {\r\n                hidden: { opacity: 0, y: 10 },\r\n                visible: { opacity: 1, y: 0 },\r\n              };\r\n\r\n              return (\r\n                <motion.tr\r\n                  key={virtualRow.key}\r\n                  variants={itemVariants}\r\n                  data-index={virtualRow.index}\r\n                  ref={rowVirtualizer.measureElement}\r\n                  onClick={() => navigate(`/employees/${employee.id}`)}\r\n                  className={`border-b border-gray-200 dark:border-gray-700 cursor-pointer ${\r\n                    selectedRows.has(employee.id)\r\n                      ? \"bg-kredivo-light text-kredivo-dark-text dark:bg-kredivo-primary/20 dark:text-kredivo-light\"\r\n                      : \"hover:bg-gray-50 dark:hover:bg-gray-700/50\"\r\n                  }`}\r\n                >\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleSelectRow(employee.id)}\r\n                      checked={selectedRows.has(employee.id)}\r\n                      className=\"rounded\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap font-medium\">\r\n                    {fullName}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    {employee.employee_email}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    {employee.position_name}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <StatusBadge status={employee.status} />\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-center\">\r\n                    <div\r\n                      className=\"relative\"\r\n                      ref={\r\n                        activeActionMenu === employee.id ? actionMenuRef : null\r\n                      }\r\n                    >\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setActiveActionMenu((prev) =>\r\n                            prev === employee.id ? null : employee.id\r\n                          );\r\n                        }}\r\n                        className=\"p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                      >\r\n                        <MoreVertical className=\"w-4 h-4\" />\r\n                      </button>\r\n                      {activeActionMenu === employee.id && (\r\n                        <div className=\"absolute top-full right-0 mt-2 w-48 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-lg shadow-xl z-20\">\r\n                          <ul>\r\n                            <li>\r\n                              <button\r\n                                onClick={() => {\r\n                                  onEdit(employee);\r\n                                  setActiveActionMenu(null);\r\n                                }}\r\n                                className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                              >\r\n                                <Edit className=\"w-4 h-4\" /> Edit Employee\r\n                              </button>\r\n                            </li>\r\n                            <li>\r\n                              <button\r\n                                onClick={() => {\r\n                                  onDeactivate(employee);\r\n                                  setActiveActionMenu(null);\r\n                                }}\r\n                                className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm text-red-500 dark:text-red-400 hover:bg-red-100 dark:hover:bg-red-900/50\"\r\n                              >\r\n                                <UserX className=\"w-4 h-4\" /> Suspend Access\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </motion.tr>\r\n              );\r\n            })}\r\n            {paddingBottom > 0 && (\r\n              <tr>\r\n                <td colSpan={6} style={{ height: `${paddingBottom}px` }} />\r\n              </tr>\r\n            )}\r\n          </motion.tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport const EmployeeListPage = ({\r\n  employees,\r\n  isLoading,\r\n  filters,\r\n  setFilters,\r\n  pagination,\r\n  setPagination,\r\n  sorting,\r\n  setSorting,\r\n  onEdit,\r\n  onDeactivate,\r\n}) => {\r\n  const [isFilterPopoverOpen, setIsFilterPopoverOpen] = useState(false);\r\n  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n  const [searchInputValue, setSearchInputValue] = useState(filters.search);\r\n  const debouncedSearchTerm = useDebounce(searchInputValue, 500);\r\n  const [isDebouncing, setIsDebouncing] = useState(false);\r\n  const filterButtonRef = useRef(null);\r\n  const token = localStorage.getItem(\"accessToken\");\r\n\r\n  const [selectedRows, setSelectedRows] = useState(new Set());\r\n  const [isBulkActionMenuOpen, setIsBulkActionMenuOpen] = useState(false);\r\n\r\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\");\r\n\r\n  const filterOptions = {\r\n    legalEntities: useFetchFilterOptions(\r\n      \"employees/options/legal_entities\",\r\n      token\r\n    ),\r\n    officeLocations: useFetchFilterOptions(\r\n      \"employees/options/office_locations\",\r\n      token\r\n    ),\r\n    employeeTypes: useFetchFilterOptions(\r\n      \"employees/options/employee_types\",\r\n      token\r\n    ),\r\n    employeeSubTypes: useFetchFilterOptions(\r\n      \"employees/options/employee_sub_types\",\r\n      token\r\n    ),\r\n    applications: useFetchFilterOptions(\"applications\", token),\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsDebouncing(true);\r\n    const handler = setTimeout(() => {\r\n      setFilters((prev) => ({ ...prev, search: debouncedSearchTerm }));\r\n      if (pagination.currentPage !== 1) {\r\n        setPagination((prev) => ({ ...prev, currentPage: 1 }));\r\n      }\r\n      setIsDebouncing(false);\r\n    }, 500);\r\n    return () => clearTimeout(handler);\r\n  }, [debouncedSearchTerm, setFilters, setPagination, pagination.currentPage]);\r\n\r\n  useEffect(() => {\r\n    setSelectedRows(new Set());\r\n  }, [filters, pagination.currentPage, employees]);\r\n\r\n  const handleClearFilters = () => {\r\n    setFilters({\r\n      status: \"all\",\r\n      search: \"\",\r\n      jobTitle: \"\",\r\n      manager: \"\",\r\n      legal_entity_id: \"\",\r\n      office_location_id: \"\",\r\n      employee_type_id: \"\",\r\n      employee_sub_type_id: \"\",\r\n      application_id: \"\",\r\n    });\r\n    setPagination((prev) => ({ ...prev, currentPage: 1 }));\r\n    setSearchInputValue(\"\");\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    const queryParams = new URLSearchParams();\r\n    for (const key in filters) {\r\n      if (filters[key] && filters[key] !== \"all\") {\r\n        queryParams.append(key, filters[key]);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await api.get(\r\n        `/api/employees/export?${queryParams.toString()}`,\r\n        { responseType: \"blob\" }\r\n      );\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"employees.csv\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n    } catch (error) {\r\n      toast.error(\"Failed to export employees.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const areAdvancedFiltersActive = useMemo(() => {\r\n    return Object.entries(filters).some(([key, value]) => {\r\n      if (key === \"status\") return value !== \"all\";\r\n      if (key === \"search\") return false;\r\n      return !!value;\r\n    });\r\n  }, [filters]);\r\n\r\n  const handleSelectAll = (e) => {\r\n    if (e.target.checked) {\r\n      setSelectedRows(new Set(employees.map((emp) => emp.id)));\r\n    } else {\r\n      setSelectedRows(new Set());\r\n    }\r\n  };\r\n\r\n  const handleSelectRow = (employeeId) => {\r\n    const newSelection = new Set(selectedRows);\r\n    if (newSelection.has(employeeId)) {\r\n      newSelection.delete(employeeId);\r\n    } else {\r\n      newSelection.add(employeeId);\r\n    }\r\n    setSelectedRows(newSelection);\r\n  };\r\n\r\n  const handleBulkDeactivate = async () => {\r\n    const promise = fetch(\r\n      `${process.env.REACT_APP_API_BASE_URL}/api/employees/bulk-deactivate`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          employeeIds: Array.from(selectedRows),\r\n          platforms: [\"google\", \"slack\", \"jumpcloud\", \"atlassian\"],\r\n        }),\r\n      }\r\n    );\r\n\r\n    toast.promise(promise, {\r\n      loading: \"Processing bulk deactivation...\",\r\n      success: \"Bulk deactivation complete!\",\r\n      error: \"An error occurred during bulk deactivation.\",\r\n    });\r\n\r\n    promise.finally(() => {\r\n      setSelectedRows(new Set());\r\n    });\r\n  };\r\n\r\n  if (isLoading && !isDebouncing) {\r\n    return (\r\n      <div className=\"p-4 sm:p-6\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\r\n          <StatusQuickFilters\r\n            currentStatus={filters.status}\r\n            onStatusChange={() => {}}\r\n          />\r\n          <EmployeeListSkeleton count={10} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{ duration: 0.3 }}\r\n      className=\"p-4 sm:p-6\"\r\n    >\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 mb-2 min-h-[40px]\">\r\n        {isDesktop && selectedRows.size > 0 ? (\r\n          <div className=\"w-full flex justify-between items-center bg-kredivo-light p-2 rounded-lg\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setSelectedRows(new Set())}\r\n                className=\"p-2 text-kredivo-dark-text rounded-full hover:bg-kredivo-primary/20\"\r\n              >\r\n                <X className=\"w-5 h-5\" />\r\n              </button>\r\n              <span className=\"font-semibold text-kredivo-dark-text\">\r\n                {selectedRows.size} selected\r\n              </span>\r\n            </div>\r\n            <div className=\"relative\">\r\n              <Button\r\n                onClick={() => setIsBulkActionMenuOpen((prev) => !prev)}\r\n                variant=\"primary\"\r\n              >\r\n                Actions\r\n              </Button>\r\n              {isBulkActionMenuOpen && (\r\n                <div className=\"absolute top-full right-0 mt-2 w-56 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-lg shadow-xl z-20\">\r\n                  <ul>\r\n                    <li>\r\n                      <button\r\n                        onClick={handleBulkDeactivate}\r\n                        className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm text-red-500 dark:text-red-400 hover:bg-red-100 dark:hover:bg-red-900/50\"\r\n                      >\r\n                        <Trash2 className=\"w-4 h-4\" /> Deactivate Selected\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white self-start sm:self-center\">\r\n              Employees\r\n            </h1>\r\n            <div className=\"flex items-center gap-2 w-full sm:w-auto flex-wrap\">\r\n              <div className=\"relative flex-grow\">\r\n                <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search employees...\"\r\n                  value={searchInputValue}\r\n                  onChange={(e) => setSearchInputValue(e.target.value)}\r\n                  className=\"w-full sm:w-64 pl-10 pr-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-kredivo-primary focus:outline-none\"\r\n                />\r\n                {isDebouncing && (\r\n                  <Loader className=\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 animate-spin text-gray-400\" />\r\n                )}\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"relative\">\r\n                  <button\r\n                    ref={filterButtonRef}\r\n                    onClick={() => setIsFilterPopoverOpen(!isFilterPopoverOpen)}\r\n                    className={`flex items-center gap-2 px-4 py-2 border rounded-md text-sm font-medium transition-colors ${\r\n                      areAdvancedFiltersActive || isFilterPopoverOpen\r\n                        ? \"bg-kredivo-light text-kredivo-dark-text border-kredivo-primary/30\"\r\n                        : \"bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n                    }`}\r\n                  >\r\n                    <FilterIcon size={16} />\r\n                    <span>Advanced</span>\r\n                    {areAdvancedFiltersActive && (\r\n                      <div className=\"w-2 h-2 bg-kredivo-primary rounded-full\"></div>\r\n                    )}\r\n                  </button>\r\n                  {isFilterPopoverOpen && (\r\n                    <FilterPopover\r\n                      initialFilters={filters}\r\n                      onApply={setFilters}\r\n                      onClear={handleClearFilters}\r\n                      onClose={() => setIsFilterPopoverOpen(false)}\r\n                      options={filterOptions}\r\n                      buttonRef={filterButtonRef}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <Button onClick={handleExport} variant=\"secondary\">\r\n                  <Download className=\"w-4 h-4 mr-2\" />\r\n                  Export\r\n                </Button>\r\n                <Button\r\n                  onClick={() => setIsImportModalOpen(true)}\r\n                  variant=\"secondary\"\r\n                >\r\n                  <Upload className=\"w-4 h-4 mr-2\" />\r\n                  Import\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <FilterPills\r\n        filters={filters}\r\n        setFilters={setFilters}\r\n        setSearchInputValue={setSearchInputValue}\r\n        options={filterOptions}\r\n        onClear={handleClearFilters}\r\n      />\r\n\r\n      <div className=\"mt-2\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\r\n          <StatusQuickFilters\r\n            currentStatus={filters.status}\r\n            onStatusChange={(status) => {\r\n              setFilters((prev) => ({ ...prev, status }));\r\n              setPagination((prev) => ({ ...prev, currentPage: 1 }));\r\n            }}\r\n          />\r\n\r\n          {employees.length > 0 ? (\r\n            isDesktop ? (\r\n              <DesktopTable\r\n                employees={employees}\r\n                sorting={sorting}\r\n                setSorting={setSorting}\r\n                selectedRows={selectedRows}\r\n                handleSelectAll={handleSelectAll}\r\n                handleSelectRow={handleSelectRow}\r\n                onEdit={onEdit}\r\n                onDeactivate={onDeactivate}\r\n              />\r\n            ) : (\r\n              <MobileList employees={employees} />\r\n            )\r\n          ) : (\r\n            <EmptyState />\r\n          )}\r\n\r\n          {employees.length > 0 && (\r\n            <Pagination pagination={pagination} setPagination={setPagination} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <EmployeeImportModal\r\n        isOpen={isImportModalOpen}\r\n        onClose={() => setIsImportModalOpen(false)}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = (value, delay) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => { setDebouncedValue(value); }, delay);\r\n        return () => { clearTimeout(handler); };\r\n    }, [value, delay]);\r\n    return debouncedValue;\r\n};"],"names":["FilterDropdown","_ref","label","name","value","onChange","options","_jsxs","children","_jsx","htmlFor","className","CustomSelect","id","val","target","placeholder","FilterPopover","_ref2","initialFilters","onApply","onClear","onClose","buttonRef","isActivityLog","localFilters","setLocalFilters","useState","popoverRef","useRef","position","setPosition","top","left","width","statusOptions","useLayoutEffect","current","rect","getBoundingClientRect","window","innerWidth","bottom","right","useEffect","handleClickOutside","event","closest","contains","document","addEventListener","removeEventListener","handleInputChange","e","prev","_objectSpread","Portal","AnimatePresence","motion","div","ref","initial","animate","exit","variants","hidden","opacity","scale","y","visible","transition","duration","ease","style","concat","_Fragment","actionType","actionTypes","actorEmail","actors","type","startDate","endDate","status","application_id","applications","onClick","handleClearClick","handleApplyClick","StatusBadgeComponent","getStatusStyles","StatusBadge","React","FilterPills","filters","setFilters","setSearchInputValue","filterLabels","jobTitle","manager","legal_entity_id","office_location_id","employee_type_id","employee_sub_type_id","optionsMap","legalEntities","officeLocations","employeeTypes","employeeSubTypes","activeFilters","Object","entries","filter","key","map","_ref3","displayValue","_optionsMap$key","foundOption","find","opt","String","length","_ref4","substring","newFilters","removeFilter","X","useMediaQuery","query","matches","setMatches","matchMedia","media","listener","Pagination","pagination","setPagination","currentPage","totalPages","totalCount","limit","from","to","Math","min","disabled","ChevronLeft","ChevronRight","StatusQuickFilters","currentStatus","onStatusChange","s","charAt","toUpperCase","slice","replace","EmptyState","UserSearch","EmployeeImportModal","isOpen","file","setFile","isUploading","setIsUploading","uploadResult","setUploadResult","queryClient","useQueryClient","handleClose","stopPropagation","errors","err","index","AlertCircle","row","message","created","CheckCircle","updated","async","response","api","get","responseType","url","URL","createObjectURL","Blob","data","link","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","error","toast","console","Download","Upload","accept","selectedFile","files","FileText","Button","variant","formData","FormData","append","post","headers","success","invalidateQueries","_error$response","_error$response$data","errorMessage","MobileList","employees","emp","fullName","first_name","middle_name","last_name","Boolean","join","Link","employee_email","position_name","DesktopTable","_virtualItems$0$start","_virtualItems$","_virtualItems$end","_virtualItems","sorting","setSorting","selectedRows","handleSelectAll","handleSelectRow","onEdit","onDeactivate","parentRef","activeActionMenu","setActiveActionMenu","actionMenuRef","navigate","useNavigate","rowVirtualizer","useVirtualizer","count","getScrollElement","estimateSize","overscan","TableHeader","columnKey","isSorted","sortBy","handleSort","sortOrder","ChevronUp","ChevronDown","ChevronsUpDown","virtualItems","getVirtualItems","paddingTop","start","paddingBottom","getTotalSize","end","checked","size","tbody","staggerChildren","colSpan","height","virtualRow","employee","tr","measureElement","has","MoreVertical","Edit","UserX","EmployeeListPage","isLoading","isFilterPopoverOpen","setIsFilterPopoverOpen","isImportModalOpen","setIsImportModalOpen","searchInputValue","search","debouncedSearchTerm","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","isDebouncing","setIsDebouncing","filterButtonRef","token","localStorage","getItem","setSelectedRows","Set","isBulkActionMenuOpen","setIsBulkActionMenuOpen","isDesktop","filterOptions","useFetchFilterOptions","handleClearFilters","areAdvancedFiltersActive","useMemo","some","_ref5","EmployeeListSkeleton","promise","fetch","process","method","Authorization","JSON","stringify","employeeIds","Array","platforms","loading","finally","Trash2","Search","Loader","FilterIcon","queryParams","URLSearchParams","toString","employeeId","newSelection","delete","add"],"sourceRoot":""}