{"version":3,"file":"static/js/908.a04b5ec7.chunk.js","mappings":"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","sources":["pages/EmployeeDetailPage/UnifiedTimelinePage.js","components/ui/DeviceDetailModal.js","components/ui/DeviceCardSkeleton.js","pages/EmployeeDetailPage/DevicesTab.js","components/ui/StatusBadge.js","config/platforms.js","pages/EmployeeDetailPage/EmployeeApplicationsTab.js","hooks/useMediaQuery.js","components/ui/JiraTicketModal.js","pages/EmployeeDetailPage/JumpcloudLogPage.js","pages/EmployeeDetailPage/GoogleLogPage.js","pages/EmployeeDetailPage/SlackLogPage.js","pages/EmployeeDetailPage/PlatformLogPage.js","components/ui/DetailRow.js","pages/EmployeeDetailPage/EmployeeDetailsTab.js","pages/EmployeeDetailPage/EmployeeDetailHeader.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst TimelineItemComponent = ({ title, description, date }) => {\r\n  return (\r\n    <div className=\"group relative py-6 pl-8 sm:pl-32\">\r\n      <div className=\"mb-1 flex flex-col items-start before:absolute before:left-2 before:h-full before:-translate-x-1/2 before:translate-y-3 before:self-start before:bg-slate-300 dark:before:bg-gray-700 before:px-px group-last:before:hidden sm:flex-row sm:before:left-0 sm:before:ml-[6.5rem] sm:after:left-0 sm:after:ml-[6.5rem] after:absolute after:left-2 after:box-content after:h-2 after:w-2 after:-translate-x-1/2 after:translate-y-1.5 after:rounded-full after:border-4 after:border-white dark:after:border-gray-800 after:bg-kredivo-primary\">\r\n        <time className=\"left-0 mb-3 inline-flex h-6 w-28 translate-y-0.5 items-center justify-center rounded-full bg-kredivo-light text-xs font-semibold uppercase text-kredivo-dark-text sm:absolute sm:mb-0\">\r\n          {date}\r\n        </time>\r\n        <div className=\"text-xl font-bold text-slate-900 dark:text-white\">\r\n          {title}\r\n        </div>\r\n      </div>\r\n      <div className=\"text-slate-500 dark:text-gray-400\">{description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TimelineItem = React.memo(TimelineItemComponent);\r\n\r\nexport const UnifiedTimelinePage = ({ events, loading, error }) => {\r\n  if (loading)\r\n    return <div className=\"text-center p-8\">Loading unified timeline...</div>;\r\n  if (error)\r\n    return <div className=\"text-center p-8 text-red-500\">Error: {error}</div>;\r\n  if (!events || events.length === 0)\r\n    return (\r\n      <div className=\"text-center p-8 text-gray-500\">\r\n        No unified activity found for this user.\r\n      </div>\r\n    );\r\n\r\n  const formatTimelineDate = (timestamp) => {\r\n    if (!timestamp) return \"\";\r\n    return new Date(timestamp).toLocaleDateString(\"en-US\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flow-root\">\r\n      {events.map((event) => (\r\n        <TimelineItem\r\n          key={event.id}\r\n          title={`Access Granted: ${event.source}`}\r\n          description={event.description}\r\n          date={formatTimelineDate(event.timestamp)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport {\r\n  X,\r\n  CheckCircle,\r\n  XCircle,\r\n  Info,\r\n  Hash,\r\n  Cpu,\r\n  HardDrive,\r\n  Monitor,\r\n  Shield,\r\n  Globe,\r\n  Wifi,\r\n} from \"lucide-react\";\r\nimport { Button } from \"./Button\";\r\n\r\n// A reusable row for displaying details, now with an icon\r\nconst DetailRow = ({ label, value, icon, isMono = false }) => (\r\n  <div className=\"flex items-start py-2.5 border-b border-gray-200 dark:border-gray-700 last:border-b-0\">\r\n    <dt className=\"w-1/3 text-gray-500 dark:text-gray-400 flex-shrink-0 flex items-center gap-2\">\r\n      {icon}\r\n      <span className=\"font-medium\">{label}</span>\r\n    </dt>\r\n    <dd\r\n      className={`w-2/3 text-gray-800 dark:text-gray-200 text-right break-words ${\r\n        isMono ? \"font-mono text-xs\" : \"\"\r\n      }`}\r\n    >\r\n      {value}\r\n    </dd>\r\n  </div>\r\n);\r\n\r\n// A reusable section header to group related information\r\nconst SectionHeader = ({ children }) => (\r\n  <h4 className=\"text-md font-semibold text-gray-600 dark:text-gray-300 pt-4 pb-1 border-b-2 border-kredivo-primary/50\">\r\n    {children}\r\n  </h4>\r\n);\r\n\r\nexport const DeviceDetailModal = ({ device, onClose }) => {\r\n  if (!device) return null;\r\n\r\n  // Helper to format boolean values for display\r\n  const formatBoolean = (value) =>\r\n    value ? (\r\n      <span className=\"flex items-center justify-end gap-1 text-green-600 dark:text-green-400\">\r\n        <CheckCircle size={14} /> Enabled\r\n      </span>\r\n    ) : (\r\n      <span className=\"flex items-center justify-end gap-1 text-red-600 dark:text-red-400\">\r\n        <XCircle size={14} /> Disabled\r\n      </span>\r\n    );\r\n\r\n  // Filter network interfaces for valid IPv4 addresses\r\n  const validIpV4Interfaces =\r\n    device.networkInterfaces?.filter(\r\n      (iface) =>\r\n        iface.address &&\r\n        /^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$/.test(iface.address) &&\r\n        !iface.address.startsWith(\"127.\")\r\n    ) || [];\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 z-50\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ scale: 0.9, opacity: 0 }}\r\n          animate={{ scale: 1, opacity: 1 }}\r\n          exit={{ scale: 0.9, opacity: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] flex flex-col\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center\">\r\n            <h3 className=\"text-lg font-semibold\">\r\n              {device.displayName || device.hostname}\r\n            </h3>\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"secondary\"\r\n              className=\"p-1 h-auto\"\r\n            >\r\n              <X size={20} />\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"p-6 overflow-y-auto space-y-2\">\r\n            <SectionHeader>System Information</SectionHeader>\r\n            <DetailRow\r\n              icon={<Info size={14} />}\r\n              label=\"Hostname\"\r\n              value={device.hostname}\r\n            />\r\n            <DetailRow\r\n              icon={<Monitor size={14} />}\r\n              label=\"Operating System\"\r\n              value={`${device.os} ${device.version}`}\r\n            />\r\n            <DetailRow\r\n              icon={<Cpu size={14} />}\r\n              label=\"Architecture\"\r\n              value={device.arch}\r\n            />\r\n            <DetailRow\r\n              icon={<Hash size={14} />}\r\n              label=\"Serial Number\"\r\n              value={device.serialNumber}\r\n              isMono={true}\r\n            />\r\n            <DetailRow\r\n              icon={<Info size={14} />}\r\n              label=\"Agent Version\"\r\n              value={device.agentVersion}\r\n            />\r\n            <DetailRow\r\n              icon={<Info size={14} />}\r\n              label=\"Last Contact\"\r\n              value={new Date(device.lastContact).toLocaleString()}\r\n            />\r\n\r\n            <SectionHeader>Security</SectionHeader>\r\n            <DetailRow\r\n              icon={<Shield size={14} />}\r\n              label=\"Multi-Factor Auth\"\r\n              value={formatBoolean(device.allowMultiFactorAuthentication)}\r\n            />\r\n            <DetailRow\r\n              icon={<HardDrive size={14} />}\r\n              label=\"Disk Encryption\"\r\n              value={formatBoolean(device.fde?.active)}\r\n            />\r\n            <DetailRow\r\n              icon={<CheckCircle size={14} />}\r\n              label=\"Has Service Account\"\r\n              value={formatBoolean(device.hasServiceAccount)}\r\n            />\r\n\r\n            <SectionHeader>Network</SectionHeader>\r\n            {validIpV4Interfaces.length > 0 ? (\r\n              validIpV4Interfaces.map((iface) => (\r\n                <DetailRow\r\n                  key={iface.name}\r\n                  icon={<Wifi size={14} />}\r\n                  label={iface.name}\r\n                  value={iface.address}\r\n                  isMono={true}\r\n                />\r\n              ))\r\n            ) : (\r\n              <p className=\"text-sm text-gray-500 py-2\">\r\n                No valid IPv4 addresses found.\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600 text-right\">\r\n            <Button onClick={onClose} variant=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","// packages/client/src/components/ui/DeviceCardSkeleton.js\r\nimport React from \"react\";\r\n\r\nexport const DeviceCardSkeleton = () => {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 animate-pulse\">\r\n      <div className=\"flex justify-between items-start\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"w-8 h-8 rounded-full bg-gray-300 dark:bg-gray-700\"></div>\r\n          <div>\r\n            <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-32 mb-2\"></div>\r\n            <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-24\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"h-5 bg-gray-300 dark:bg-gray-700 rounded-full w-16\"></div>\r\n      </div>\r\n      <div className=\"mt-4 pt-2 border-t border-gray-100 dark:border-gray-700\">\r\n        <div className=\"flex justify-between\">\r\n          <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-20\"></div>\r\n          <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-28\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// packages/client/src/pages/EmployeeDetailPage/DevicesTab.js\r\nimport React, { useState } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport api from \"../../api/api\";\r\nimport { Smartphone, Laptop, Server, CheckCircle, XCircle } from \"lucide-react\";\r\nimport { DeviceDetailModal } from \"../../components/ui/DeviceDetailModal\"; // Import the new modal\r\nimport { DeviceCardSkeleton } from \"../../components/ui/DeviceCardSkeleton\"; // Import the skeleton\r\n\r\nconst fetchEmployeeDevices = async (employeeId) => {\r\n  const { data } = await api.get(`/api/employees/${employeeId}/devices`);\r\n  return data;\r\n};\r\n\r\nconst DeviceCard = ({ device, onClick }) => {\r\n  const getDeviceIcon = (os) => {\r\n    if (os.toLowerCase().includes(\"windows\"))\r\n      return <Laptop className=\"w-8 h-8 text-blue-500\" />;\r\n    if (os.toLowerCase().includes(\"mac\"))\r\n      return <Laptop className=\"w-8 h-8 text-gray-500\" />;\r\n    if (os.toLowerCase().includes(\"linux\"))\r\n      return <Server className=\"w-8 h-8 text-yellow-500\" />;\r\n    return <Smartphone className=\"w-8 h-8 text-green-500\" />;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 cursor-pointer hover:shadow-md transition-shadow\"\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"flex justify-between items-start\">\r\n        <div className=\"flex items-center gap-4\">\r\n          {getDeviceIcon(device.os)}\r\n          <div>\r\n            <p className=\"font-bold text-gray-900 dark:text-white\">\r\n              {device.hostname || \"N/A\"}\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              {device.os}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {device.active ? (\r\n          <span className=\"flex items-center text-xs gap-1 text-green-600\">\r\n            <CheckCircle size={14} /> Active\r\n          </span>\r\n        ) : (\r\n          <span className=\"flex items-center text-xs gap-1 text-red-600\">\r\n            <XCircle size={14} /> Inactive\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className=\"mt-4 pt-2 border-t border-gray-100 dark:border-gray-700 text-sm\">\r\n        <div className=\"flex justify-between\">\r\n          <span className=\"text-gray-500\">Last Contact:</span>\r\n          <span>{new Date(device.lastContact).toLocaleString()}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DevicesTab = ({ employeeId }) => {\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const {\r\n    data: devices,\r\n    isLoading,\r\n    error,\r\n  } = useQuery({\r\n    queryKey: [\"employeeDevices\", employeeId],\r\n    queryFn: () => fetchEmployeeDevices(employeeId),\r\n  });\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {/* Show 3 skeleton cards while loading */}\r\n        <DeviceCardSkeleton />\r\n        <DeviceCardSkeleton />\r\n        <DeviceCardSkeleton />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center p-6 text-red-500\">\r\n        Could not fetch device details.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!devices || devices.length === 0) {\r\n    return (\r\n      <div className=\"text-center p-6 text-gray-500\">\r\n        No devices found for this employee.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {devices.map((device) => (\r\n          <DeviceCard\r\n            key={device.id}\r\n            device={device}\r\n            onClick={() => setSelectedDevice(device)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <DeviceDetailModal\r\n        device={selectedDevice}\r\n        onClose={() => setSelectedDevice(null)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst StatusBadgeComponent = ({ status }) => {\r\n  // This function determines the Tailwind CSS classes based on the status string.\r\n  const getStatusStyles = () => {\r\n    switch (status) {\r\n      case \"Active\":\r\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\r\n      case \"Inactive\":\r\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300\";\r\n      case \"For Escalation\":\r\n        // Using a distinct style for \"For Escalation\" status.\r\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\";\r\n      default:\r\n        // A default style for any unexpected status values.\r\n        return \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span\r\n      className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyles()}`}\r\n    >\r\n      {status}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const StatusBadge = React.memo(StatusBadgeComponent);\r\n","export const PLATFORM_CONFIG = {\r\n    'Google Workspace': {\r\n        logo: 'https://static.wikia.nocookie.net/logopedia/images/c/c1/Google_Apps_for_Work_icon.png/'\r\n    },\r\n    'Slack': {\r\n        logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Slack_icon_2019.svg/2048px-Slack_icon_2019.svg.png'\r\n    },\r\n    'JumpCloud': {\r\n        logo: 'https://icon2.cleanpng.com/20181123/fw/kisspng-reading-education-organization-jumpcloud-kindergar-5bf85b3d3c6ca7.1295031515430029412475.jpg'\r\n    },\r\n    'Atlassian': {\r\n        logo: 'https://wac-cdn.atlassian.com/assets/img/favicons/atlassian/favicon-32x32.png'\r\n    },\r\n    'Default': {\r\n        logo: '' // A default fallback logo if needed\r\n    }\r\n};","import React, { memo } from 'react';\r\nimport { Ticket } from 'lucide-react';\r\nimport { PLATFORM_CONFIG } from '../../config/platforms';\r\nconst PlatformStatusBadge = ({ status }) => {\r\n    const styles = {\r\n        'Active': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\r\n        'Suspended': 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',\r\n        'Not Found': 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',\r\n        'Error': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\r\n    };\r\n    return (\r\n        <span className={`px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full whitespace-nowrap ${styles[status] || styles['Error']}`}>\r\n            {status}\r\n        </span>\r\n    );\r\n};\r\n\r\nconst PlatformRowSkeleton = () => (\r\n    <div className=\"flex items-center justify-between p-4 rounded-lg bg-gray-50 dark:bg-gray-900/50 animate-pulse\">\r\n        <div className=\"flex items-center gap-4\">\r\n            <div className=\"w-8 h-8 rounded-md bg-gray-300 dark:bg-gray-700\"></div>\r\n            <div>\r\n                <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-24\"></div>\r\n                <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-32 mt-1\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"h-6 bg-gray-300 dark:bg-gray-700 rounded-full w-20\"></div>\r\n    </div>\r\n);\r\n\r\nexport const EmployeeApplicationsTab = memo(({ applications, platformStatuses, isLoading, onTicketClick }) => {\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">Platform Access Status</h3>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-6\">Live status of the employee's account on integrated external platforms.</p>\r\n                <div className=\"space-y-4\">\r\n                    {isLoading ? (\r\n                        <>\r\n                            <PlatformRowSkeleton />\r\n                            <PlatformRowSkeleton />\r\n                            <PlatformRowSkeleton />\r\n                        </>\r\n                    ) : (\r\n                        platformStatuses.map(platform => (\r\n                            <div key={platform.platform} className=\"flex items-center justify-between p-4 rounded-lg bg-gray-50 dark:bg-gray-900/50\">\r\n                                <div className=\"flex items-center gap-4 min-w-0\">\r\n                                    <img src={PLATFORM_CONFIG[platform.platform]?.logo || PLATFORM_CONFIG.Default.logo} alt={`${platform.platform} Logo`} className=\"w-8 h-8\"/>\r\n                                    <div className=\"min-w-0\">\r\n                                        <p className=\"font-semibold text-gray-800 dark:text-gray-200 truncate\">{platform.platform}</p>\r\n                                        <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{platform.email || 'N/A'}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <PlatformStatusBadge status={platform.status} />\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n                 <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Internal Application Access</h3>\r\n                 {(!applications || applications.length === 0) ? (\r\n                    <div className=\"text-center text-gray-500 dark:text-gray-400 py-4\">No internal application access records found.</div>\r\n                 ) : (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n                        {applications.map(app => (\r\n                            <div key={app.name} className=\"p-4 bg-gray-50 dark:bg-gray-900/50 rounded-lg border border-gray-200 dark:border-gray-700/50\">\r\n                                <div className=\"font-semibold text-gray-800 dark:text-gray-200\">{app.name}</div>\r\n                                <div className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                                    <span className=\"font-medium\">Role:</span> {app.role}\r\n                                </div>\r\n                                <div className=\"mt-1 text-sm text-gray-500 dark:text-gray-400 flex items-center gap-2\">\r\n                                    <span className=\"font-medium\">Request:</span>\r\n                                    {app.jira_ticket ? (\r\n                                        <button onClick={() => onTicketClick(app.jira_ticket)} className=\"text-kredivo-primary hover:underline font-semibold flex items-center gap-1\">\r\n                                            <Ticket className=\"w-4 h-4\"/>\r\n                                            {app.jira_ticket}\r\n                                        </button>\r\n                                    ) : '—'}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                 )}\r\n            </div>\r\n        </div>\r\n    );\r\n});","import { useState, useEffect } from 'react';\r\n\r\nexport const useMediaQuery = (query) => {\r\n    const [matches, setMatches] = useState(window.matchMedia(query).matches);\r\n    useEffect(() => {\r\n        const media = window.matchMedia(query);\r\n        const listener = () => setMatches(media.matches);\r\n        media.addEventListener('change', listener);\r\n        return () => media.removeEventListener('change', listener);\r\n    }, [query]);\r\n    return matches;\r\n};","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Portal } from './Portal';\r\nimport { X, ExternalLink, User, CheckSquare, Calendar, Loader } from 'lucide-react';\r\nimport toast from 'react-hot-toast';\r\nimport { Button } from './Button';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst fetchTicketDetails = async (ticketId, token) => {\r\n    if (!ticketId || !token) return null;\r\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/jira/ticket/${ticketId}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!response.ok) {\r\n        const err = await response.json();\r\n        throw new Error(err.message || 'Failed to fetch Jira ticket details.');\r\n    }\r\n    return response.json();\r\n};\r\n\r\nconst DetailRow = ({ icon, label, value }) => (\r\n    <div className=\"flex items-center text-sm\">\r\n        <div className=\"w-1/3 text-gray-500 dark:text-gray-400 flex items-center\">\r\n            {icon}\r\n            <span className=\"ml-2\">{label}</span>\r\n        </div>\r\n        <div className=\"w-2/3 text-gray-800 dark:text-gray-200 font-medium\">{value}</div>\r\n    </div>\r\n);\r\n\r\n\r\nexport const JiraTicketModal = ({ ticketId, onClose }) => {\r\n    const token = localStorage.getItem('accessToken');\r\n    const { data: ticket, error, isLoading } = useQuery({\r\n        queryKey: ['jiraTicket', ticketId],\r\n        queryFn: () => fetchTicketDetails(ticketId, token),\r\n        enabled: !!ticketId && !!token,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(error) toast.error(error.message);\r\n    }, [error]);\r\n\r\n    const jiraBaseUrl = process.env.REACT_APP_JIRA_BASE_URL || `https://${process.env.ATLASSIAN_DOMAIN}/browse/`;\r\n    \r\n    return (\r\n        <Portal>\r\n            <AnimatePresence>\r\n                {ticketId && (\r\n                    <motion.div\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 z-50\"\r\n                        onClick={onClose}\r\n                    >\r\n                        <motion.div\r\n                            initial={{ scale: 0.9, opacity: 0 }}\r\n                            animate={{ scale: 1, opacity: 1 }}\r\n                            exit={{ scale: 0.9, opacity: 0 }}\r\n                            transition={{ duration: 0.2 }}\r\n                            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-lg\"\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center\">\r\n                                <h3 className=\"text-lg font-semibold\">Jira Ticket: {ticketId}</h3>\r\n                                <button onClick={onClose} className=\"p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700\">\r\n                                    <X className=\"w-5 h-5\" />\r\n                                </button>\r\n                            </div>\r\n                            \r\n                            <div className=\"p-6\">\r\n                                {isLoading && (\r\n                                    <div className=\"flex justify-center items-center h-48\">\r\n                                        <Loader className=\"w-8 h-8 animate-spin text-kredivo-primary\" />\r\n                                    </div>\r\n                                )}\r\n                                {error && (\r\n                                    <div className=\"text-center h-48 flex flex-col justify-center items-center text-red-500\">\r\n                                        <p className=\"font-semibold\">Could not load ticket details.</p>\r\n                                        <p className=\"text-sm\">{error.message}</p>\r\n                                    </div>\r\n                                )}\r\n                                {ticket && (\r\n                                    <div className=\"space-y-4\">\r\n                                        <p className=\"text-xl font-bold text-gray-900 dark:text-white\">{ticket.summary}</p>\r\n                                        <div className=\"space-y-3 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                                            <DetailRow icon={<CheckSquare size={16}/>} label=\"Status\" value={ticket.status} />\r\n                                            <DetailRow icon={<User size={16}/>} label=\"Assignee\" value={ticket.assignee} />\r\n                                            <DetailRow icon={<User size={16}/>} label=\"Reporter\" value={ticket.reporter} />\r\n                                            <DetailRow icon={<Calendar size={16}/>} label=\"Created\" value={new Date(ticket.created).toLocaleString()} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"bg-gray-50 dark:bg-gray-700/50 px-6 py-3 flex justify-end\">\r\n                                <a href={`${jiraBaseUrl}${ticketId}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button variant=\"primary\">\r\n                                        <ExternalLink className=\"w-4 h-4 mr-2\" />\r\n                                        Open in Jira\r\n                                    </Button>\r\n                                </a>\r\n                            </div>\r\n                        </motion.div>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </Portal>\r\n    );\r\n};","import React, { memo, useState } from \"react\";\r\nimport {\r\n  AppWindow,\r\n  ChevronDown,\r\n  Database,\r\n  FileLock,\r\n  Filter,\r\n  Fingerprint,\r\n  KeyRound,\r\n  MapPin,\r\n  Monitor,\r\n  Server,\r\n  Shield,\r\n  UserCheck,\r\n  UserX,\r\n} from \"lucide-react\";\r\nimport { Button } from \"../../components/ui/Button\";\r\nimport { CustomSelect } from \"../../components/ui/CustomSelect\"; // Import CustomSelect\r\n\r\n// A dedicated badge for the log status\r\nconst LogStatusBadge = ({ success }) => {\r\n  const isSuccess = success;\r\n  const baseClasses = \"px-2.5 py-0.5 text-xs font-semibold rounded-full\";\r\n  const successClasses =\r\n    \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\r\n  const failureClasses =\r\n    \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300\";\r\n\r\n  return (\r\n    <span\r\n      className={`${baseClasses} ${\r\n        isSuccess ? successClasses : failureClasses\r\n      }`}\r\n    >\r\n      {isSuccess ? \"Success\" : \"Failed\"}\r\n    </span>\r\n  );\r\n};\r\n\r\n// The key-value pairs for the details section\r\nconst DetailItem = ({ label, children, isMono = false }) => (\r\n  <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center py-2.5 px-1\">\r\n    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400 flex-shrink-0\">\r\n      {label}\r\n    </dt>\r\n    <dd\r\n      className={`text-sm text-gray-800 dark:text-gray-200 text-left sm:text-right mt-1 sm:mt-0 break-words ${\r\n        isMono ? \"font-mono text-xs\" : \"\"\r\n      }`}\r\n    >\r\n      {children || \"N/A\"}\r\n    </dd>\r\n  </div>\r\n);\r\n\r\n// The header for sections within the details card\r\nconst DetailSectionHeader = ({ children }) => (\r\n  <h5 className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider mt-3 mb-1 px-1 first:mt-0\">\r\n    {children}\r\n  </h5>\r\n);\r\n\r\n// The main log page component\r\nexport const JumpCloudLogPage = memo(({ logs, loading, error }) => {\r\n  const [expandedLogRowId, setExpandedLogRowId] = useState(null);\r\n\r\n  const toggleRowExpansion = (logId) => {\r\n    setExpandedLogRowId((prevId) => (prevId === logId ? null : logId));\r\n  };\r\n\r\n  const getEventIcon = (eventType, success) => {\r\n    const baseClass = \"w-6 h-6 flex-shrink-0\";\r\n    switch (eventType) {\r\n      case \"login_attempt\":\r\n        return success ? (\r\n          <Monitor className={`${baseClass} text-green-500`} />\r\n        ) : (\r\n          <Monitor className={`${baseClass} text-red-500`} />\r\n        );\r\n      case \"sso_auth\":\r\n        return <AppWindow className={`${baseClass} text-blue-500`} />;\r\n      case \"user_create\":\r\n        return <UserCheck className={`${baseClass} text-green-500`} />;\r\n      case \"user_delete\":\r\n        return <UserX className={`${baseClass} text-red-500`} />;\r\n      case \"password_change\":\r\n        return <KeyRound className={`${baseClass} text-yellow-500`} />;\r\n      case \"directory_object_modify\":\r\n        return <FileLock className={`${baseClass} text-orange-500`} />;\r\n      case \"ldap_bind\":\r\n        return <Database className={`${baseClass} text-indigo-500`} />;\r\n      case \"user_login_attempt\":\r\n        return <Fingerprint className={`${baseClass} text-cyan-500`} />;\r\n      case \"passwordmanager_backup_create\":\r\n        return <FileLock className={`${baseClass} text-purple-500`} />;\r\n      default:\r\n        return <Shield className={`${baseClass} text-gray-400`} />;\r\n    }\r\n  };\r\n\r\n  const formatPrimaryInfo = (log) => {\r\n    switch (log.event_type) {\r\n      case \"sso_auth\":\r\n        return `Authenticated to ${\r\n          log.application?.display_label || \"an application\"\r\n        }`;\r\n      case \"login_attempt\":\r\n        return `Login to ${log.system?.displayName || \"system\"}`;\r\n      case \"ldap_bind\":\r\n        return `LDAP Bind attempt via ${log.auth_method}`;\r\n      default:\r\n        return log.event_type.replace(/_/g, \" \");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n      {loading && (\r\n        <div className=\"text-center p-8\">Loading JumpCloud logs...</div>\r\n      )}\r\n      {error && (\r\n        <div className=\"text-center p-8 text-red-500\">Error: {error}</div>\r\n      )}\r\n      {!loading && !error && (!logs || logs.length === 0) && (\r\n        <div className=\"text-center p-8\">\r\n          No JumpCloud logs found for the selected criteria.\r\n        </div>\r\n      )}\r\n\r\n      {!loading &&\r\n        !error &&\r\n        logs &&\r\n        logs.map((log) => {\r\n          const isExpanded = expandedLogRowId === log.id;\r\n          const hasAuthContext =\r\n            log.auth_context && Object.keys(log.auth_context).length > 0;\r\n          const isSuccess =\r\n            log.event_type === \"sso_auth\" ? log.sso_token_success : log.success;\r\n          return (\r\n            <div\r\n              key={log.id}\r\n              className=\"p-4 hover:bg-gray-50 dark:hover:bg-gray-800/50 transition-colors duration-150\"\r\n            >\r\n              <button\r\n                onClick={() => toggleRowExpansion(log.id)}\r\n                className=\"w-full text-left\"\r\n              >\r\n                <div className=\"flex items-start gap-4\">\r\n                  <div className=\"mt-1 flex-shrink-0\">\r\n                    {getEventIcon(log.event_type, isSuccess)}\r\n                  </div>\r\n                  <div className=\"flex-grow min-w-0\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <p className=\"font-semibold text-gray-800 dark:text-gray-200 capitalize pr-4\">\r\n                        {formatPrimaryInfo(log)}\r\n                      </p>\r\n                      <div className=\"flex-shrink-0 flex items-center gap-2\">\r\n                        <LogStatusBadge success={isSuccess} />\r\n                        <ChevronDown\r\n                          className={`w-5 h-5 text-gray-400 transition-transform ${\r\n                            isExpanded ? \"rotate-180\" : \"\"\r\n                          }`}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                      {new Date(log.timestamp).toLocaleString()}\r\n                    </p>\r\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mt-2\">\r\n                      <span className=\"flex items-center gap-1.5\">\r\n                        <MapPin size={14} /> {log.geoip?.country_code || \"N/A\"}\r\n                      </span>\r\n                      <span className=\"flex items-center gap-1.5\">\r\n                        <Server size={14} /> {log.client_ip || \"N/A\"}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </button>\r\n              {isExpanded && (\r\n                <div className=\"pt-3\">\r\n                  <div className=\"p-3 bg-gray-100 dark:bg-gray-900/70 rounded-lg shadow-inner\">\r\n                    <dl className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                      <DetailSectionHeader>Event</DetailSectionHeader>\r\n                      <DetailItem label=\"Event Type\" isMono>\r\n                        {log.event_type}\r\n                      </DetailItem>\r\n                      <DetailItem label=\"Service\">{log.service}</DetailItem>\r\n                      {log.message && (\r\n                        <DetailItem label=\"Message\">{log.message}</DetailItem>\r\n                      )}\r\n                      {log.application && (\r\n                        <>\r\n                          <DetailSectionHeader>Application</DetailSectionHeader>\r\n                          <DetailItem label=\"Name\">\r\n                            {log.application.display_label}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"SSO Type\">\r\n                            {log.application.sso_type}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"ID\" isMono>\r\n                            {log.application.id}\r\n                          </DetailItem>\r\n                        </>\r\n                      )}\r\n                      {hasAuthContext && (\r\n                        <>\r\n                          <DetailSectionHeader>\r\n                            Authentication\r\n                          </DetailSectionHeader>\r\n                          <DetailItem label=\"MFA Method\">\r\n                            {log.mfa_meta?.type?.replace(/_/g, \" \") ||\r\n                              \"Not Applied\"}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"IDP Initiated\">\r\n                            {log.idp_initiated ? \"Yes\" : \"No\"}\r\n                          </DetailItem>\r\n                        </>\r\n                      )}\r\n                      {log.geoip && (\r\n                        <>\r\n                          <DetailSectionHeader>Location</DetailSectionHeader>\r\n                          <DetailItem label=\"Timezone\">\r\n                            {log.geoip.timezone}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"Coordinates\">\r\n                            {log.geoip.latitude}, {log.geoip.longitude}\r\n                          </DetailItem>\r\n                        </>\r\n                      )}\r\n                      {log.useragent && (\r\n                        <>\r\n                          <DetailSectionHeader>Device</DetailSectionHeader>\r\n                          <DetailItem label=\"OS\">\r\n                            {log.useragent.os_full}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"Browser\">\r\n                            {log.useragent.name} {log.useragent.version}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"Device Type\">\r\n                            {log.useragent.device}\r\n                          </DetailItem>\r\n                        </>\r\n                      )}\r\n                      {log.auth_context?.system && (\r\n                        <>\r\n                          <DetailSectionHeader>System</DetailSectionHeader>\r\n                          <DetailItem label=\"Hostname\">\r\n                            {log.auth_context.system.hostname}\r\n                          </DetailItem>\r\n                          <DetailItem label=\"OS\">\r\n                            {log.auth_context.system.os}{\" \"}\r\n                            {log.auth_context.system.version}\r\n                          </DetailItem>\r\n                        </>\r\n                      )}\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Shield, Server } from 'lucide-react';\r\n\r\nexport const GoogleLogPage = ({ logs, loading, error }) => {\r\n    const getEventIcon = (eventName) => {\r\n        if (eventName.includes('login_success')) return <Shield className=\"w-5 h-5 text-green-500\" />;\r\n        if (eventName.includes('login_failure')) return <Shield className=\"w-5 h-5 text-red-500\" />;\r\n        return <Shield className=\"w-5 h-5 text-gray-400\" />;\r\n    };\r\n\r\n    if (loading) return <div className=\"text-center p-8\">Loading Google Workspace logs...</div>;\r\n    if (error) return <div className=\"text-center p-8 text-red-500\">Error: {error}</div>;\r\n    if (!logs || logs.length === 0) return <div className=\"text-center p-8 text-gray-500\">No Google Workspace login logs found for this user in the last 30 days.</div>;\r\n\r\n    return (\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {logs.map(log => (\r\n                <div key={log.id.uniqueQualifier} className=\"flex flex-col md:flex-row p-4 items-start md:items-center space-y-2 md:space-y-0\">\r\n                    <div className=\"flex items-center gap-3 w-full md:w-1/3\">\r\n                        {getEventIcon(log.events[0].name)}\r\n                        <span className=\"font-semibold capitalize\">{log.events[0].name.replace(/_/g, ' ')}</span>\r\n                    </div>\r\n                    <div className=\"flex-1 text-sm text-gray-600 dark:text-gray-400\">\r\n                        <p className=\"flex items-center gap-2\"><Server className=\"w-4 h-4\" /> IP Address: {log.ipAddress || 'N/A'}</p>\r\n                    </div>\r\n                    <div className=\"w-full md:w-auto text-left md:text-right text-sm text-gray-500 dark:text-gray-300\">\r\n                        {new Date(log.id.time).toLocaleString()}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { MessageSquare, LogIn, LogOut, File } from 'lucide-react';\r\n\r\nexport const SlackLogPage = ({ logs, loading, error }) => {\r\n    const getEventIcon = (action) => {\r\n        if (action.includes('login')) return <LogIn className=\"w-5 h-5 text-green-500\" />;\r\n        if (action.includes('logout')) return <LogOut className=\"w-5 h-5 text-red-500\" />;\r\n        if (action.includes('file')) return <File className=\"w-5 h-5 text-blue-500\" />;\r\n        return <MessageSquare className=\"w-5 h-5 text-gray-400\" />;\r\n    };\r\n\r\n    if (loading) return <div className=\"text-center p-8\">Loading Slack logs...</div>;\r\n    if (error) return <div className=\"text-center p-8 text-red-500\">Error: {error}</div>;\r\n    if (!logs || logs.length === 0) return <div className=\"text-center p-8 text-gray-500\">No Slack audit logs found for this user (Note: Requires Enterprise Grid plan).</div>;\r\n\r\n    return (\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {logs.map(log => (\r\n                <div key={log.id} className=\"flex flex-col md:flex-row p-4 items-start md:items-center space-y-2 md:space-y-0\">\r\n                    <div className=\"flex items-center gap-3 w-full md:w-1/3\">\r\n                        {getEventIcon(log.action)}\r\n                        <span className=\"font-semibold capitalize\">{log.action.replace(/_/g, ' ')}</span>\r\n                    </div>\r\n                    <div className=\"flex-1 text-sm text-gray-600 dark:text-gray-400\">\r\n                        <p>Entity: {log.entity.channel?.name || ''}</p>\r\n                    </div>\r\n                    <div className=\"w-full md:w-auto text-left md:text-right text-sm text-gray-500 dark:text-gray-300\">\r\n                        {new Date(log.date_create * 1000).toLocaleString()}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};","import React, { useState, useCallback, useMemo } from \"react\";\r\nimport { Filter } from \"lucide-react\";\r\nimport { CustomSelect } from \"../../components/ui/CustomSelect\";\r\nimport { Button } from \"../../components/ui/Button\";\r\nimport { JumpCloudLogPage } from \"./JumpcloudLogPage\";\r\nimport { GoogleLogPage } from \"./GoogleLogPage\";\r\nimport { SlackLogPage } from \"./SlackLogPage\";\r\n\r\nconst platformOptions = [\r\n  { id: \"jumpcloud\", name: \"JumpCloud\" },\r\n  { id: \"google\", name: \"Google Workspace\" },\r\n  { id: \"slack\", name: \"Slack\" },\r\n];\r\n\r\nconst jumpCloudServiceOptions = [\r\n  { id: \"all\", name: \"All\" },\r\n  { id: \"access_management\", name: \"Access Management\" },\r\n  { id: \"alert\", name: \"Alert\" },\r\n  { id: \"directory\", name: \"Directory\" },\r\n  { id: \"ldap\", name: \"LDAP\" },\r\n  { id: \"mdm\", name: \"MDM\" },\r\n  { id: \"notifications\", name: \"Notifications\" },\r\n  { id: \"password_manager\", name: \"Password Manager\" },\r\n  { id: \"object_storage\", name: \"Object Storage\" },\r\n  { id: \"radius\", name: \"RADIUS\" },\r\n  { id: \"reports\", name: \"Reports\" },\r\n  { id: \"software\", name: \"Software\" },\r\n  { id: \"sso\", name: \"SSO\" },\r\n  { id: \"systems\", name: \"Systems\" },\r\n];\r\n\r\nexport const PlatformLogPage = ({ employeeId, onLogout }) => {\r\n  const [selectedPlatform, setSelectedPlatform] = useState(\"jumpcloud\");\r\n  const [logData, setLogData] = useState({\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n    fetched: false,\r\n  });\r\n\r\n  // Centralized filter state\r\n  const [filterParams, setFilterParams] = useState({\r\n    startTime: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\r\n      .toISOString()\r\n      .split(\"T\")[0],\r\n    endTime: new Date().toISOString().split(\"T\")[0],\r\n    limit: 100,\r\n    service: \"all\", // Add service to the filter state\r\n  });\r\n\r\n  const fetchLogData = useCallback(async () => {\r\n    if (!employeeId) return;\r\n\r\n    setLogData({ data: [], loading: true, error: null, fetched: false });\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (!token) {\r\n      onLogout();\r\n      return;\r\n    }\r\n\r\n    let url;\r\n    const baseUrl = `${process.env.REACT_APP_API_BASE_URL}/api/employees/${employeeId}`;\r\n\r\n    switch (selectedPlatform) {\r\n      case \"jumpcloud\":\r\n        const params = new URLSearchParams({\r\n          startTime: filterParams.startTime,\r\n          endTime: filterParams.endTime,\r\n          limit: filterParams.limit,\r\n          service: filterParams.service, // Include service in the request\r\n        });\r\n        url = `${baseUrl}/jumpcloud-logs?${params.toString()}`;\r\n        break;\r\n      case \"google\":\r\n        url = `${baseUrl}/google-logs`;\r\n        break;\r\n      case \"slack\":\r\n        url = `${baseUrl}/slack-logs`;\r\n        break;\r\n      default:\r\n        setLogData({\r\n          data: [],\r\n          loading: false,\r\n          error: \"Invalid platform selected\",\r\n          fetched: true,\r\n        });\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!response.ok) {\r\n        const err = await response.json();\r\n        throw new Error(err.message || \"Failed to fetch logs\");\r\n      }\r\n      const data = await response.json();\r\n      setLogData({ data, loading: false, error: null, fetched: true });\r\n    } catch (error) {\r\n      setLogData({\r\n        data: [],\r\n        loading: false,\r\n        error: error.message,\r\n        fetched: true,\r\n      });\r\n    }\r\n  }, [employeeId, selectedPlatform, filterParams, onLogout]);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilterParams((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSelectChange = (name, value) => {\r\n    setFilterParams((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const LogViewer = useMemo(() => {\r\n    switch (selectedPlatform) {\r\n      case \"jumpcloud\":\r\n        return (\r\n          <JumpCloudLogPage\r\n            logs={logData.data}\r\n            loading={logData.loading}\r\n            error={logData.error}\r\n          />\r\n        );\r\n      case \"google\":\r\n        return (\r\n          <GoogleLogPage\r\n            logs={logData.data}\r\n            loading={logData.loading}\r\n            error={logData.error}\r\n          />\r\n        );\r\n      case \"slack\":\r\n        return (\r\n          <SlackLogPage\r\n            logs={logData.data}\r\n            loading={logData.loading}\r\n            error={logData.error}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"p-8 text-center\">\r\n            Please select a platform to view logs.\r\n          </div>\r\n        );\r\n    }\r\n  }, [selectedPlatform, logData]);\r\n\r\n  const maxDate = new Date().toISOString().split(\"T\")[0];\r\n  const minDate = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)\r\n    .toISOString()\r\n    .split(\"T\")[0];\r\n  const limitOptions = [\r\n    { id: 10, name: \"10\" },\r\n    { id: 100, name: \"100\" },\r\n    { id: 500, name: \"500\" },\r\n    { id: 1000, name: \"1000\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"p-4 bg-gray-50 dark:bg-gray-900/50 border-b border-gray-200 dark:border-gray-700 space-y-4\">\r\n        <div>\r\n          <label\r\n            htmlFor=\"platform\"\r\n            className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n          >\r\n            Select Platform\r\n          </label>\r\n          <CustomSelect\r\n            id=\"platform\"\r\n            options={platformOptions}\r\n            value={selectedPlatform}\r\n            onChange={setSelectedPlatform}\r\n          />\r\n        </div>\r\n        {selectedPlatform === \"jumpcloud\" && (\r\n          <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-md\">\r\n            <h4 className=\"font-semibold text-md mb-2 flex items-center gap-2\">\r\n              <Filter size={16} /> JumpCloud Filters\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 items-end\">\r\n              <div>\r\n                <label\r\n                  htmlFor=\"service\"\r\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n                >\r\n                  Service\r\n                </label>\r\n                <CustomSelect\r\n                  id=\"service\"\r\n                  options={jumpCloudServiceOptions}\r\n                  value={filterParams.service}\r\n                  onChange={(val) => handleSelectChange(\"service\", val)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"limit\"\r\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n                >\r\n                  Limit\r\n                </label>\r\n                <CustomSelect\r\n                  id=\"limit\"\r\n                  options={limitOptions}\r\n                  value={filterParams.limit}\r\n                  onChange={(val) => handleSelectChange(\"limit\", val)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"startTime\"\r\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                >\r\n                  Start Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startTime\"\r\n                  id=\"startTime\"\r\n                  value={filterParams.startTime}\r\n                  min={minDate}\r\n                  max={maxDate}\r\n                  onChange={handleFilterChange}\r\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:ring-2 focus:ring-kredivo-primary\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"endTime\"\r\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                >\r\n                  End Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"endTime\"\r\n                  id=\"endTime\"\r\n                  value={filterParams.endTime}\r\n                  min={filterParams.startTime}\r\n                  max={maxDate}\r\n                  onChange={handleFilterChange}\r\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:ring-2 focus:ring-kredivo-primary\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Button\r\n          onClick={fetchLogData}\r\n          disabled={logData.loading}\r\n          className=\"w-full md:w-auto justify-center\"\r\n        >\r\n          {logData.loading\r\n            ? \"Fetching...\"\r\n            : `Fetch ${\r\n                platformOptions.find((p) => p.id === selectedPlatform)?.name\r\n              } Logs`}\r\n        </Button>\r\n      </div>\r\n      <div className=\"p-4\">{LogViewer}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst DetailRowComponent = ({ icon, label, value }) => {\r\n  return (\r\n    <div className=\"flex items-start justify-between py-2.5 text-sm border-b border-gray-200 dark:border-gray-700/50 last:border-b-0\">\r\n      <span className=\"flex items-center text-gray-600 dark:text-gray-400 font-medium\">\r\n        {icon}\r\n        {label}\r\n      </span>\r\n      <div className=\"text-gray-800 dark:text-gray-200 text-right\">\r\n        {value || \"—\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DetailRow = React.memo(DetailRowComponent);","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UserSquare,\r\n  UserCog,\r\n  ChevronsUp,\r\n  Building2,\r\n  Layers,\r\n  MapPin,\r\n  Hash,\r\n  Calendar,\r\n  Ticket,\r\n} from \"lucide-react\";\r\nimport { DetailRow } from \"../../components/ui/DetailRow\";\r\nimport { StatusBadge } from \"../../components/ui/StatusBadge\";\r\n\r\nexport const EmployeeDetailsTab = memo(\r\n  ({ employee, permissions, navigate, onTicketClick }) => {\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return \"—\";\r\n      return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      });\r\n    };\r\n\r\n    const JiraTicketLink = ({ ticketId }) => {\r\n      if (!ticketId) return \"—\";\r\n      // This is now a button that calls the handler passed down from the parent\r\n      return (\r\n        <button\r\n          onClick={() => onTicketClick(ticketId)}\r\n          className=\"text-kredivo-primary hover:text-kredivo-primary-hover hover:underline font-mono flex items-center gap-1 text-right\"\r\n        >\r\n          <Ticket className=\"w-4 h-4\" />\r\n          {ticketId}\r\n        </button>\r\n      );\r\n    };\r\n\r\n    const ManagerLink = ({ managerId, managerName, managerEmail }) => {\r\n      if (!managerId) return \"—\";\r\n\r\n      // This logic allows navigating to the manager's profile if the user has permission\r\n      if (permissions.includes(\"employee:read:all\")) {\r\n        return (\r\n          <Link\r\n            to={`/employees/${managerId}`}\r\n            className=\"text-kredivo-primary hover:text-kredivo-primary-hover hover:underline text-right\"\r\n          >\r\n            <div>{managerName}</div>\r\n            <div className=\"text-xs text-gray-400\">{managerEmail}</div>\r\n          </Link>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div className=\"text-right\">\r\n          <div>{managerName}</div>\r\n          <div className=\"text-xs text-gray-400\">{managerEmail}</div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\r\n              Identity & Role\r\n            </h4>\r\n            <DetailRow\r\n              icon={<UserSquare className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Email\"\r\n              value={employee.employee_email}\r\n            />\r\n            <DetailRow\r\n              icon={<UserCog className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Manager\"\r\n              value={\r\n                <ManagerLink\r\n                  managerId={employee.manager_id}\r\n                  managerName={employee.manager_name}\r\n                  managerEmail={employee.manager_email}\r\n                />\r\n              }\r\n            />\r\n            <DetailRow\r\n              icon={<ChevronsUp className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Position Level\"\r\n              value={employee.position_level}\r\n            />\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\r\n              Employment Details\r\n            </h4>\r\n            <DetailRow\r\n              icon={<Layers className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Employment Status\"\r\n              value={<StatusBadge status={employee.status} />}\r\n            />\r\n            <DetailRow\r\n              icon={<Building2 className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Legal Entity\"\r\n              value={employee.legal_entity}\r\n            />\r\n            <DetailRow\r\n              icon={<Layers className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Employee Type\"\r\n              value={\r\n                employee.employee_type && employee.employee_sub_type\r\n                  ? `${employee.employee_type} (${employee.employee_sub_type})`\r\n                  : employee.employee_type || \"—\"\r\n              }\r\n            />\r\n            <DetailRow\r\n              icon={<MapPin className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Office Location\"\r\n              value={employee.office_location}\r\n            />\r\n            <DetailRow\r\n              icon={<Hash className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Asset\"\r\n              value={employee.asset_name}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\r\n              Timeline\r\n            </h4>\r\n            <DetailRow\r\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-green-500\" />}\r\n              label=\"Join Date\"\r\n              value={formatDate(employee.join_date)}\r\n            />\r\n            <DetailRow\r\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-red-500\" />}\r\n              label=\"Exit Date\"\r\n              value={formatDate(employee.date_of_exit_at_date)}\r\n            />\r\n            <DetailRow\r\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-red-500\" />}\r\n              label=\"Access Cut-off\"\r\n              value={formatDate(employee.access_cut_off_date_at_date)}\r\n            />\r\n            <DetailRow\r\n              icon={<Calendar className=\"w-4 h-4 mr-2.5 text-gray-400\" />}\r\n              label=\"Record Updated\"\r\n              value={formatDate(employee.updated_at)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\r\n            <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">\r\n              Related Tickets\r\n            </h4>\r\n            <DetailRow\r\n              icon={<Ticket className=\"w-4 h-4 mr-2.5 text-kredivo-primary\" />}\r\n              label=\"Onboarding Ticket\"\r\n              value={<JiraTicketLink ticketId={employee.onboarding_ticket} />}\r\n            />\r\n            <DetailRow\r\n              icon={<Ticket className=\"w-4 h-4 mr-2.5 text-kredivo-primary\" />}\r\n              label=\"Offboarding Ticket\"\r\n              value={<JiraTicketLink ticketId={employee.offboarding_ticket} />}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Edit, UserX, MoreVertical } from \"lucide-react\";\r\nimport { StatusBadge } from \"../../components/ui/StatusBadge\";\r\nimport { Button } from \"../../components/ui/Button\";\r\n\r\nexport const EmployeeDetailHeader = ({\r\n  employee,\r\n  onEdit,\r\n  onDeactivate,\r\n  permissions,\r\n  isOwnProfile,\r\n}) => {\r\n  const fullName = [\r\n    employee.first_name,\r\n    employee.middle_name,\r\n    employee.last_name,\r\n  ]\r\n    .filter(Boolean)\r\n    .join(\" \");\r\n  const [isActionMenuOpen, setIsActionMenuOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n\r\n  // Close menu when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setIsActionMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4 sm:p-6 flex items-center justify-between\">\r\n      <div className=\"flex items-center\">\r\n        <img\r\n          src={`https://i.pravatar.cc/150?u=${employee.employee_email}`}\r\n          alt=\"User Avatar\"\r\n          className=\"w-16 h-16 rounded-full border-4 border-blue-200 dark:border-blue-800\"\r\n        />\r\n        <div className=\"ml-4\">\r\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n            {fullName}\r\n          </h2>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            {employee.employee_email}\r\n          </p>\r\n          <div className=\"mt-2\">\r\n            <StatusBadge status={employee.status} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Desktop Buttons */}\r\n      <div className=\"hidden md:flex self-start items-center gap-2\">\r\n        {permissions.includes(\"employee:update\") && (\r\n          <Button\r\n            onClick={() => onEdit(employee)}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Edit className=\"w-4 h-4\" /> Edit\r\n          </Button>\r\n        )}\r\n        {permissions.includes(\"employee:deactivate\") && !isOwnProfile && (\r\n          <button\r\n            onClick={() => onDeactivate(employee)}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 transition-colors\"\r\n          >\r\n            <UserX className=\"w-4 h-4\" /> Suspend Access\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Mobile Kebab Menu */}\r\n      <div ref={menuRef} className=\"md:hidden relative\">\r\n        <button\r\n          onClick={() => setIsActionMenuOpen(!isActionMenuOpen)}\r\n          className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n        >\r\n          <MoreVertical className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\r\n        </button>\r\n\r\n        {isActionMenuOpen && (\r\n          <div className=\"absolute top-full right-0 mt-2 w-48 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-lg shadow-lg z-30\">\r\n            <ul>\r\n              {permissions.includes(\"employee:update\") && (\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      onEdit(employee);\r\n                      setIsActionMenuOpen(false);\r\n                    }}\r\n                    className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  >\r\n                    <Edit className=\"w-4 h-4\" /> Edit\r\n                  </button>\r\n                </li>\r\n              )}\r\n              {permissions.includes(\"employee:deactivate\") && !isOwnProfile && (\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      onDeactivate(employee);\r\n                      setIsActionMenuOpen(false);\r\n                    }}\r\n                    className=\"w-full text-left flex items-center gap-3 px-4 py-2 text-sm text-red-500 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  >\r\n                    <UserX className=\"w-4 h-4\" /> Suspend Access\r\n                  </button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["TimelineItemComponent","_ref","title","description","date","_jsxs","className","children","_jsx","TimelineItem","React","UnifiedTimelinePage","_ref2","events","loading","error","length","map","event","concat","source","timestamp","Date","toLocaleDateString","day","month","year","id","DetailRow","label","value","icon","isMono","SectionHeader","DeviceDetailModal","_ref3","_device$networkInterf","_device$fde","device","onClose","formatBoolean","CheckCircle","size","XCircle","validIpV4Interfaces","networkInterfaces","filter","iface","address","test","startsWith","AnimatePresence","motion","div","initial","opacity","animate","exit","onClick","scale","e","stopPropagation","displayName","hostname","Button","variant","X","Info","Monitor","os","version","Cpu","arch","Hash","serialNumber","agentVersion","lastContact","toLocaleString","Shield","allowMultiFactorAuthentication","HardDrive","fde","active","hasServiceAccount","Wifi","name","DeviceCardSkeleton","DeviceCard","toLowerCase","includes","Laptop","Server","Smartphone","DevicesTab","employeeId","selectedDevice","setSelectedDevice","useState","data","devices","isLoading","useQuery","queryKey","queryFn","async","api","get","fetchEmployeeDevices","_Fragment","StatusBadgeComponent","status","getStatusStyles","StatusBadge","PLATFORM_CONFIG","logo","PlatformStatusBadge","styles","PlatformRowSkeleton","EmployeeApplicationsTab","memo","applications","platformStatuses","onTicketClick","platform","_PLATFORM_CONFIG$plat","src","Default","alt","email","app","role","jira_ticket","Ticket","useMediaQuery","query","matches","setMatches","window","matchMedia","useEffect","media","listener","addEventListener","removeEventListener","JiraTicketModal","ticketId","token","localStorage","getItem","ticket","response","fetch","process","REACT_APP_API_BASE_URL","headers","ok","err","json","Error","message","fetchTicketDetails","enabled","toast","jiraBaseUrl","REACT_APP_JIRA_BASE_URL","ATLASSIAN_DOMAIN","Portal","transition","duration","Loader","summary","CheckSquare","User","assignee","reporter","Calendar","created","href","target","rel","ExternalLink","LogStatusBadge","success","isSuccess","DetailItem","DetailSectionHeader","JumpCloudLogPage","_ref4","logs","expandedLogRowId","setExpandedLogRowId","getEventIcon","eventType","baseClass","AppWindow","UserCheck","UserX","KeyRound","FileLock","Database","Fingerprint","formatPrimaryInfo","log","_log$application","_log$system","event_type","application","display_label","system","auth_method","replace","_log$geoip","_log$mfa_meta","_log$mfa_meta$type","_log$auth_context","isExpanded","hasAuthContext","auth_context","Object","keys","sso_token_success","toggleRowExpansion","logId","prevId","ChevronDown","MapPin","geoip","country_code","client_ip","service","sso_type","mfa_meta","type","idp_initiated","timezone","latitude","longitude","useragent","os_full","GoogleLogPage","eventName","ipAddress","time","uniqueQualifier","SlackLogPage","_log$entity$channel","action","LogIn","LogOut","File","MessageSquare","entity","channel","date_create","platformOptions","jumpCloudServiceOptions","PlatformLogPage","_platformOptions$find","onLogout","selectedPlatform","setSelectedPlatform","logData","setLogData","fetched","filterParams","setFilterParams","startTime","now","toISOString","split","endTime","limit","fetchLogData","useCallback","url","baseUrl","params","URLSearchParams","toString","Authorization","handleFilterChange","prev","_objectSpread","handleSelectChange","LogViewer","useMemo","maxDate","minDate","htmlFor","CustomSelect","options","onChange","Filter","val","min","max","disabled","find","p","DetailRowComponent","EmployeeDetailsTab","employee","permissions","navigate","formatDate","dateString","JiraTicketLink","ManagerLink","managerId","managerName","managerEmail","Link","to","UserSquare","employee_email","UserCog","manager_id","manager_name","manager_email","ChevronsUp","position_level","Layers","Building2","legal_entity","employee_type","employee_sub_type","office_location","asset_name","join_date","date_of_exit_at_date","access_cut_off_date_at_date","updated_at","onboarding_ticket","offboarding_ticket","EmployeeDetailHeader","onEdit","onDeactivate","isOwnProfile","fullName","first_name","middle_name","last_name","Boolean","join","isActionMenuOpen","setIsActionMenuOpen","menuRef","useRef","handleClickOutside","current","contains","document","Edit","ref","MoreVertical"],"sourceRoot":""}